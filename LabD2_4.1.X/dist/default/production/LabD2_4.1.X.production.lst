

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 09 01:19:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0000                     	;# 
    75     0001                     	;# 
    76     0002                     	;# 
    77     0003                     	;# 
    78     0004                     	;# 
    79     0005                     	;# 
    80     0006                     	;# 
    81     0007                     	;# 
    82     0008                     	;# 
    83     0009                     	;# 
    84     000A                     	;# 
    85     000B                     	;# 
    86     000C                     	;# 
    87     000D                     	;# 
    88     000E                     	;# 
    89     000E                     	;# 
    90     000F                     	;# 
    91     0010                     	;# 
    92     0011                     	;# 
    93     0012                     	;# 
    94     0013                     	;# 
    95     0014                     	;# 
    96     0015                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0017                     	;# 
   100     0018                     	;# 
   101     0019                     	;# 
   102     001A                     	;# 
   103     001B                     	;# 
   104     001B                     	;# 
   105     001C                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     0081                     	;# 
   110     0085                     	;# 
   111     0086                     	;# 
   112     0087                     	;# 
   113     0088                     	;# 
   114     0089                     	;# 
   115     008C                     	;# 
   116     008D                     	;# 
   117     008E                     	;# 
   118     008F                     	;# 
   119     0090                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0095                     	;# 
   127     0096                     	;# 
   128     0097                     	;# 
   129     0098                     	;# 
   130     0099                     	;# 
   131     009A                     	;# 
   132     009B                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     009F                     	;# 
   137     0105                     	;# 
   138     0107                     	;# 
   139     0108                     	;# 
   140     0109                     	;# 
   141     010C                     	;# 
   142     010C                     	;# 
   143     010D                     	;# 
   144     010E                     	;# 
   145     010F                     	;# 
   146     0185                     	;# 
   147     0187                     	;# 
   148     0188                     	;# 
   149     0189                     	;# 
   150     018C                     	;# 
   151     018D                     	;# 
   152     0000                     	;# 
   153     0001                     	;# 
   154     0002                     	;# 
   155     0003                     	;# 
   156     0004                     	;# 
   157     0005                     	;# 
   158     0006                     	;# 
   159     0007                     	;# 
   160     0008                     	;# 
   161     0009                     	;# 
   162     000A                     	;# 
   163     000B                     	;# 
   164     000C                     	;# 
   165     000D                     	;# 
   166     000E                     	;# 
   167     000E                     	;# 
   168     000F                     	;# 
   169     0010                     	;# 
   170     0011                     	;# 
   171     0012                     	;# 
   172     0013                     	;# 
   173     0014                     	;# 
   174     0015                     	;# 
   175     0015                     	;# 
   176     0016                     	;# 
   177     0017                     	;# 
   178     0018                     	;# 
   179     0019                     	;# 
   180     001A                     	;# 
   181     001B                     	;# 
   182     001B                     	;# 
   183     001C                     	;# 
   184     001D                     	;# 
   185     001E                     	;# 
   186     001F                     	;# 
   187     0081                     	;# 
   188     0085                     	;# 
   189     0086                     	;# 
   190     0087                     	;# 
   191     0088                     	;# 
   192     0089                     	;# 
   193     008C                     	;# 
   194     008D                     	;# 
   195     008E                     	;# 
   196     008F                     	;# 
   197     0090                     	;# 
   198     0091                     	;# 
   199     0092                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0094                     	;# 
   204     0095                     	;# 
   205     0096                     	;# 
   206     0097                     	;# 
   207     0098                     	;# 
   208     0099                     	;# 
   209     009A                     	;# 
   210     009B                     	;# 
   211     009C                     	;# 
   212     009D                     	;# 
   213     009E                     	;# 
   214     009F                     	;# 
   215     0105                     	;# 
   216     0107                     	;# 
   217     0108                     	;# 
   218     0109                     	;# 
   219     010C                     	;# 
   220     010C                     	;# 
   221     010D                     	;# 
   222     010E                     	;# 
   223     010F                     	;# 
   224     0185                     	;# 
   225     0187                     	;# 
   226     0188                     	;# 
   227     0189                     	;# 
   228     018C                     	;# 
   229     018D                     	;# 
   230     0000                     	;# 
   231     0001                     	;# 
   232     0002                     	;# 
   233     0003                     	;# 
   234     0004                     	;# 
   235     0005                     	;# 
   236     0006                     	;# 
   237     0007                     	;# 
   238     0008                     	;# 
   239     0009                     	;# 
   240     000A                     	;# 
   241     000B                     	;# 
   242     000C                     	;# 
   243     000D                     	;# 
   244     000E                     	;# 
   245     000E                     	;# 
   246     000F                     	;# 
   247     0010                     	;# 
   248     0011                     	;# 
   249     0012                     	;# 
   250     0013                     	;# 
   251     0014                     	;# 
   252     0015                     	;# 
   253     0015                     	;# 
   254     0016                     	;# 
   255     0017                     	;# 
   256     0018                     	;# 
   257     0019                     	;# 
   258     001A                     	;# 
   259     001B                     	;# 
   260     001B                     	;# 
   261     001C                     	;# 
   262     001D                     	;# 
   263     001E                     	;# 
   264     001F                     	;# 
   265     0081                     	;# 
   266     0085                     	;# 
   267     0086                     	;# 
   268     0087                     	;# 
   269     0088                     	;# 
   270     0089                     	;# 
   271     008C                     	;# 
   272     008D                     	;# 
   273     008E                     	;# 
   274     008F                     	;# 
   275     0090                     	;# 
   276     0091                     	;# 
   277     0092                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0094                     	;# 
   282     0095                     	;# 
   283     0096                     	;# 
   284     0097                     	;# 
   285     0098                     	;# 
   286     0099                     	;# 
   287     009A                     	;# 
   288     009B                     	;# 
   289     009C                     	;# 
   290     009D                     	;# 
   291     009E                     	;# 
   292     009F                     	;# 
   293     0105                     	;# 
   294     0107                     	;# 
   295     0108                     	;# 
   296     0109                     	;# 
   297     010C                     	;# 
   298     010C                     	;# 
   299     010D                     	;# 
   300     010E                     	;# 
   301     010F                     	;# 
   302     0185                     	;# 
   303     0187                     	;# 
   304     0188                     	;# 
   305     0189                     	;# 
   306     018C                     	;# 
   307     018D                     	;# 
   308     0000                     	;# 
   309     0001                     	;# 
   310     0002                     	;# 
   311     0003                     	;# 
   312     0004                     	;# 
   313     0005                     	;# 
   314     0006                     	;# 
   315     0007                     	;# 
   316     0008                     	;# 
   317     0009                     	;# 
   318     000A                     	;# 
   319     000B                     	;# 
   320     000C                     	;# 
   321     000D                     	;# 
   322     000E                     	;# 
   323     000E                     	;# 
   324     000F                     	;# 
   325     0010                     	;# 
   326     0011                     	;# 
   327     0012                     	;# 
   328     0013                     	;# 
   329     0014                     	;# 
   330     0015                     	;# 
   331     0015                     	;# 
   332     0016                     	;# 
   333     0017                     	;# 
   334     0018                     	;# 
   335     0019                     	;# 
   336     001A                     	;# 
   337     001B                     	;# 
   338     001B                     	;# 
   339     001C                     	;# 
   340     001D                     	;# 
   341     001E                     	;# 
   342     001F                     	;# 
   343     0081                     	;# 
   344     0085                     	;# 
   345     0086                     	;# 
   346     0087                     	;# 
   347     0088                     	;# 
   348     0089                     	;# 
   349     008C                     	;# 
   350     008D                     	;# 
   351     008E                     	;# 
   352     008F                     	;# 
   353     0090                     	;# 
   354     0091                     	;# 
   355     0092                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0094                     	;# 
   360     0095                     	;# 
   361     0096                     	;# 
   362     0097                     	;# 
   363     0098                     	;# 
   364     0099                     	;# 
   365     009A                     	;# 
   366     009B                     	;# 
   367     009C                     	;# 
   368     009D                     	;# 
   369     009E                     	;# 
   370     009F                     	;# 
   371     0105                     	;# 
   372     0107                     	;# 
   373     0108                     	;# 
   374     0109                     	;# 
   375     010C                     	;# 
   376     010C                     	;# 
   377     010D                     	;# 
   378     010E                     	;# 
   379     010F                     	;# 
   380     0185                     	;# 
   381     0187                     	;# 
   382     0188                     	;# 
   383     0189                     	;# 
   384     018C                     	;# 
   385     018D                     	;# 
   386                           
   387                           	psect	strings
   388     0800                     __pstrings:
   389     0800                     stringtab:
   390     0800                     __stringtab:
   391                           
   392                           ;	String table - string pointers are 1 byte each
   393     0800  1BFF               	btfsc	btemp+1,7
   394     0801  280A               	ljmp	stringcode
   395     0802  1383               	bcf	3,7
   396     0803  187F               	btfsc	btemp+1,0
   397     0804  1783               	bsf	3,7
   398     0805  0800               	movf	0,w
   399     0806  0A84               	incf	4,f
   400     0807  1903               	skipnz
   401     0808  0AFF               	incf	btemp+1,f
   402     0809  0008               	return
   403     080A                     stringcode:
   404     080A                     stringdir:
   405     080A  3008               	movlw	high stringdir
   406     080B  008A               	movwf	10
   407     080C  0804               	movf	4,w
   408     080D  0A84               	incf	4,f
   409     080E  0782               	addwf	2,f
   410     080F                     __stringbase:
   411     080F  3400               	retlw	0
   412     0810                     __end_of__stringtab:
   413     0810                     _dpowers:
   414     0810  3401               	retlw	1
   415     0811  3400               	retlw	0
   416     0812  340A               	retlw	10
   417     0813  3400               	retlw	0
   418     0814  3464               	retlw	100
   419     0815  3400               	retlw	0
   420     0816  34E8               	retlw	232
   421     0817  3403               	retlw	3
   422     0818  3410               	retlw	16
   423     0819  3427               	retlw	39
   424     081A                     __end_of_dpowers:
   425     0008                     _PORTDbits	set	8
   426     0006                     _PORTBbits	set	6
   427     0013                     _SSPBUF	set	19
   428     0014                     _SSPCON	set	20
   429     0009                     _PORTE	set	9
   430     0008                     _PORTD	set	8
   431     0006                     _PORTB	set	6
   432     0005                     _PORTA	set	5
   433     0063                     _SSPIF	set	99
   434     005E                     _PEIE	set	94
   435     005F                     _GIE	set	95
   436     0091                     _SSPCON2bits	set	145
   437     0087                     _TRISCbits	set	135
   438     0094                     _SSPSTAT	set	148
   439     0093                     _SSPADD	set	147
   440     0091                     _SSPCON2	set	145
   441     0089                     _TRISE	set	137
   442     0088                     _TRISD	set	136
   443     0086                     _TRISB	set	134
   444     0085                     _TRISA	set	133
   445     008F                     _OSCCON	set	143
   446     0463                     _SSPIE	set	1123
   447     043C                     _TRISC4	set	1084
   448     043B                     _TRISC3	set	1083
   449     0189                     _ANSELH	set	393
   450     0188                     _ANSEL	set	392
   451     081A                     STR_1:
   452     081A  3450               	retlw	80	;'P'
   453     081B  344F               	retlw	79	;'O'
   454     081C  3454               	retlw	84	;'T'
   455     081D  3431               	retlw	49	;'1'
   456     081E  3400               	retlw	0
   457     081F                     STR_2:
   458     081F  3425               	retlw	37	;'%'
   459     0820  3464               	retlw	100	;'d'
   460     0821  3400               	retlw	0
   461     081F                     
   462                           	psect	cinit
   463     07F3                     start_initialization:	
   464                           ; #config settings
   465                           
   466     07F3                     __initialization:
   467                           
   468                           ; Clear objects allocated to BANK0
   469     07F3  1383               	bcf	3,7	;select IRP bank0
   470     07F4  3020               	movlw	low __pbssBANK0
   471     07F5  0084               	movwf	4
   472     07F6  3044               	movlw	low (__pbssBANK0+36)
   473     07F7  120A  158A  2711  120A  118A  	fcall	clear_ram0
   474     07FC                     end_of_initialization:	
   475                           ;End of C runtime variable initialization code
   476                           
   477     07FC                     __end_of__initialization:
   478     07FC  0183               	clrf	3
   479     07FD  120A  118A  2C0A   	ljmp	_main	;jump to C main() function
   480                           
   481                           	psect	bssBANK0
   482     0020                     __pbssBANK0:
   483     0020                     _YEAR:
   484     0020                     	ds	2
   485     0022                     _MON:
   486     0022                     	ds	2
   487     0024                     _DAY:
   488     0024                     	ds	2
   489     0026                     _HOR:
   490     0026                     	ds	2
   491     0028                     _MIN:
   492     0028                     	ds	2
   493     002A                     _SEG:
   494     002A                     	ds	2
   495     002C                     _POT1:
   496     002C                     	ds	2
   497     002E                     _cPOT1:
   498     002E                     	ds	4
   499     0032                     _cYEAR:
   500     0032                     	ds	3
   501     0035                     _cMON:
   502     0035                     	ds	3
   503     0038                     _cDAY:
   504     0038                     	ds	3
   505     003B                     _cHOR:
   506     003B                     	ds	3
   507     003E                     _cMIN:
   508     003E                     	ds	3
   509     0041                     _cSEG:
   510     0041                     	ds	3
   511                           
   512                           	psect	clrtext
   513     0F11                     clear_ram0:	
   514                           ;	Called with FSR containing the base address, and
   515                           ;	W with the last address+1
   516                           
   517     0F11  0064               	clrwdt	;clear the watchdog before getting into this loop
   518     0F12                     clrloop0:
   519     0F12  0180               	clrf	0	;clear RAM location pointed to by FSR
   520     0F13  0A84               	incf	4,f	;increment pointer
   521     0F14  0604               	xorwf	4,w	;XOR with final address
   522     0F15  1903               	btfsc	3,2	;have we reached the end yet?
   523     0F16  3400               	retlw	0	;all done for this memory range, return
   524     0F17  0604               	xorwf	4,w	;XOR again to restore value
   525     0F18  2F12               	goto	clrloop0	;do the next byte
   526                           
   527                           	psect	cstackCOMMON
   528     0070                     __pcstackCOMMON:
   529     0070                     ?_Lcd_Init:
   530     0070                     ?_Lcd_Clear:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_I2C_Master_Start:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ??_I2C_Master_Start:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_I2C_Master_Stop:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ??_I2C_Master_Stop:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_I2C_Master_RepeatedStart:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ??_I2C_Master_RepeatedStart:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_Bcd_to_Dec:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_Lcd_Write_Char:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_setup:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_main:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?_Dec_to_Bcd:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ??_Dec_to_Bcd:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?_I2C_Master_Wait:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ??_I2C_Master_Wait:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_Lcd_Port:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ??_Lcd_Port:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ?_Lcd_Cmd:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ?___bmul:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ?_I2C_Master_Read:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?___lwdiv:	
   591                           ; 2 bytes @ 0x0
   592                           
   593     0070                     ?___lldiv:	
   594                           ; 2 bytes @ 0x0
   595                           
   596     0070                     Dec_to_Bcd@dec_number:	
   597                           ; 4 bytes @ 0x0
   598                           
   599     0070                     Lcd_Port@a:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ___bmul@multiplicand:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     I2C_Master_Read@a:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     ___lwdiv@divisor:	
   609                           ; 2 bytes @ 0x0
   610                           
   611     0070                     ___lldiv@divisor:	
   612                           ; 2 bytes @ 0x0
   613                           
   614                           
   615                           ; 4 bytes @ 0x0
   616     0070                     	ds	1
   617     0071                     ??_Lcd_Write_Char:
   618     0071                     ??_Lcd_Cmd:	
   619                           ; 1 bytes @ 0x1
   620                           
   621     0071                     ??___bmul:	
   622                           ; 1 bytes @ 0x1
   623                           
   624     0071                     Dec_to_Bcd@bcd_number:	
   625                           ; 1 bytes @ 0x1
   626                           
   627                           
   628                           ; 1 bytes @ 0x1
   629     0071                     	ds	1
   630     0072                     ?_I2C_Master_Write:
   631     0072                     ??_I2C_Master_Read:	
   632                           ; 1 bytes @ 0x2
   633                           
   634     0072                     Lcd_Write_Char@a:	
   635                           ; 1 bytes @ 0x2
   636                           
   637     0072                     ___bmul@product:	
   638                           ; 1 bytes @ 0x2
   639                           
   640     0072                     I2C_Master_Write@d:	
   641                           ; 1 bytes @ 0x2
   642                           
   643     0072                     ___lwdiv@dividend:	
   644                           ; 2 bytes @ 0x2
   645                           
   646                           
   647                           ; 2 bytes @ 0x2
   648     0072                     	ds	1
   649     0073                     ?_Lcd_Write_String:
   650     0073                     Lcd_Cmd@a:	
   651                           ; 1 bytes @ 0x3
   652                           
   653     0073                     ___bmul@multiplier:	
   654                           ; 1 bytes @ 0x3
   655                           
   656     0073                     Lcd_Write_String@a:	
   657                           ; 1 bytes @ 0x3
   658                           
   659                           
   660                           ; 2 bytes @ 0x3
   661     0073                     	ds	1
   662     0074                     ?_Set_Time_RTC:
   663     0074                     ?_Set_Date_RTC:	
   664                           ; 1 bytes @ 0x4
   665                           
   666     0074                     ??_Lcd_Init:	
   667                           ; 1 bytes @ 0x4
   668                           
   669     0074                     ??_Lcd_Clear:	
   670                           ; 1 bytes @ 0x4
   671                           
   672     0074                     ?_Lcd_Set_Cursor:	
   673                           ; 1 bytes @ 0x4
   674                           
   675     0074                     ??_I2C_Master_Write:	
   676                           ; 1 bytes @ 0x4
   677                           
   678     0074                     ??_Bcd_to_Dec:	
   679                           ; 1 bytes @ 0x4
   680                           
   681     0074                     ??___lwdiv:	
   682                           ; 1 bytes @ 0x4
   683                           
   684     0074                     Set_Time_RTC@min:	
   685                           ; 1 bytes @ 0x4
   686                           
   687     0074                     Set_Date_RTC@mon:	
   688                           ; 1 bytes @ 0x4
   689                           
   690     0074                     Lcd_Set_Cursor@b:	
   691                           ; 1 bytes @ 0x4
   692                           
   693     0074                     I2C_Master_Read@temp:	
   694                           ; 1 bytes @ 0x4
   695                           
   696     0074                     ___lldiv@dividend:	
   697                           ; 2 bytes @ 0x4
   698                           
   699                           
   700                           ; 4 bytes @ 0x4
   701     0074                     	ds	1
   702     0075                     ??_Lcd_Set_Cursor:
   703     0075                     ??_Lcd_Write_String:	
   704                           ; 1 bytes @ 0x5
   705                           
   706     0075                     Set_Time_RTC@sec:	
   707                           ; 1 bytes @ 0x5
   708                           
   709     0075                     Set_Date_RTC@year:	
   710                           ; 1 bytes @ 0x5
   711                           
   712     0075                     Lcd_Set_Cursor@a:	
   713                           ; 1 bytes @ 0x5
   714                           
   715     0075                     ___lwdiv@quotient:	
   716                           ; 1 bytes @ 0x5
   717                           
   718                           
   719                           ; 2 bytes @ 0x5
   720     0075                     	ds	1
   721     0076                     ??_Set_Time_RTC:
   722     0076                     ??_Set_Date_RTC:	
   723                           ; 1 bytes @ 0x6
   724                           
   725     0076                     Bcd_to_Dec@dec:	
   726                           ; 1 bytes @ 0x6
   727                           
   728     0076                     Lcd_Set_Cursor@temp:	
   729                           ; 1 bytes @ 0x6
   730                           
   731                           
   732                           ; 1 bytes @ 0x6
   733     0076                     	ds	1
   734     0077                     Bcd_to_Dec@bcd:
   735     0077                     ___lwdiv@counter:	
   736                           ; 1 bytes @ 0x7
   737                           
   738                           
   739                           ; 1 bytes @ 0x7
   740     0077                     	ds	1
   741     0078                     ??___lldiv:
   742     0078                     ?___lwmod:	
   743                           ; 1 bytes @ 0x8
   744                           
   745     0078                     Set_Time_RTC@hour:	
   746                           ; 2 bytes @ 0x8
   747                           
   748     0078                     Set_Date_RTC@day:	
   749                           ; 1 bytes @ 0x8
   750                           
   751     0078                     Lcd_Write_String@i:	
   752                           ; 1 bytes @ 0x8
   753                           
   754     0078                     ___lwmod@divisor:	
   755                           ; 2 bytes @ 0x8
   756                           
   757                           
   758                           ; 2 bytes @ 0x8
   759     0078                     	ds	1
   760     0079                     ___lldiv@quotient:
   761                           
   762                           ; 4 bytes @ 0x9
   763     0079                     	ds	1
   764     007A                     ___lwmod@dividend:
   765                           
   766                           ; 2 bytes @ 0xA
   767     007A                     	ds	2
   768     007C                     ??___lwmod:
   769                           
   770                           ; 1 bytes @ 0xC
   771     007C                     	ds	1
   772     007D                     ___lldiv@counter:
   773     007D                     ___lwmod@counter:	
   774                           ; 1 bytes @ 0xD
   775                           
   776                           
   777                           ; 1 bytes @ 0xD
   778     007D                     	ds	1
   779     007E                     ??_setup:
   780                           
   781                           	psect	cstackBANK0
   782     0044                     __pcstackBANK0:	
   783                           ; 1 bytes @ 0xE
   784                           
   785     0044                     ?_I2C_Master_Init:
   786     0044                     ?_sprintf:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0044                     sprintf@f:	
   790                           ; 2 bytes @ 0x0
   791                           
   792     0044                     I2C_Master_Init@c:	
   793                           ; 1 bytes @ 0x0
   794                           
   795                           
   796                           ; 4 bytes @ 0x0
   797     0044                     	ds	3
   798     0047                     ??_sprintf:
   799                           
   800                           ; 1 bytes @ 0x3
   801     0047                     	ds	1
   802     0048                     ??_I2C_Master_Init:
   803                           
   804                           ; 1 bytes @ 0x4
   805     0048                     	ds	2
   806     004A                     sprintf@ap:
   807                           
   808                           ; 1 bytes @ 0x6
   809     004A                     	ds	1
   810     004B                     sprintf@flag:
   811                           
   812                           ; 1 bytes @ 0x7
   813     004B                     	ds	1
   814     004C                     sprintf@prec:
   815                           
   816                           ; 1 bytes @ 0x8
   817     004C                     	ds	1
   818     004D                     sprintf@val:
   819                           
   820                           ; 2 bytes @ 0x9
   821     004D                     	ds	2
   822     004F                     sprintf@sp:
   823                           
   824                           ; 1 bytes @ 0xB
   825     004F                     	ds	1
   826     0050                     sprintf@c:
   827                           
   828                           ; 1 bytes @ 0xC
   829     0050                     	ds	1
   830     0051                     ??_main:
   831                           
   832                           ; 1 bytes @ 0xD
   833     0051                     	ds	3
   834                           
   835                           	psect	maintext
   836     040A                     __pmaintext:	
   837 ;;
   838 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   839 ;;
   840 ;; *************** function _main *****************
   841 ;; Defined at:
   842 ;;		line 82 in file "Principal.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : B00/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0
   858 ;;      Temps:          0       3       0       0       0
   859 ;;      Totals:         0       3       0       0       0
   860 ;;Total ram usage:        3 bytes
   861 ;; Hardware stack levels required when called: 3
   862 ;; This function calls:
   863 ;;		_Bcd_to_Dec
   864 ;;		_I2C_Master_Read
   865 ;;		_I2C_Master_RepeatedStart
   866 ;;		_I2C_Master_Start
   867 ;;		_I2C_Master_Stop
   868 ;;		_I2C_Master_Write
   869 ;;		_Lcd_Clear
   870 ;;		_Lcd_Init
   871 ;;		_Lcd_Set_Cursor
   872 ;;		_Lcd_Write_Char
   873 ;;		_Lcd_Write_String
   874 ;;		_Set_Date_RTC
   875 ;;		_Set_Time_RTC
   876 ;;		_setup
   877 ;;		_sprintf
   878 ;; This function is called by:
   879 ;;		Startup code after reset
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883     040A                     _main:	
   884                           ;psect for function _main
   885                           
   886     040A                     l1710:	
   887                           ;incstack = 0
   888                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   889                           
   890                           
   891                           ;Principal.c: 83:     setup();
   892     040A  120A  158A  27DC  120A  118A  	fcall	_setup
   893                           
   894                           ;Principal.c: 85:     Set_Time_RTC(1, 15, 0);
   895     040F  300F               	movlw	15
   896     0410  00F4               	movwf	Set_Time_RTC@min
   897     0411  01F5               	clrf	Set_Time_RTC@sec
   898     0412  3001               	movlw	1
   899     0413  120A  118A  221F  120A  118A  	fcall	_Set_Time_RTC
   900                           
   901                           ;Principal.c: 86:     Set_Date_RTC(9, 8, 23);
   902     0418  3008               	movlw	8
   903     0419  00F4               	movwf	Set_Date_RTC@mon
   904     041A  3017               	movlw	23
   905     041B  00F5               	movwf	Set_Date_RTC@year
   906     041C  3009               	movlw	9
   907     041D  120A  118A  22A7  120A  118A  	fcall	_Set_Date_RTC
   908                           
   909                           ;Principal.c: 88:     Lcd_Init();
   910     0422  120A  118A  216E  120A  118A  	fcall	_Lcd_Init
   911                           
   912                           ;Principal.c: 89:     Lcd_Clear();
   913     0427  120A  118A  2003  120A  118A  	fcall	_Lcd_Clear
   914                           
   915                           ;Principal.c: 90:     Lcd_Set_Cursor(1, 1);
   916     042C  01F4               	clrf	Lcd_Set_Cursor@b
   917     042D  0AF4               	incf	Lcd_Set_Cursor@b,f
   918     042E  3001               	movlw	1
   919     042F  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
   920     0434                     l1712:
   921                           
   922                           ;Principal.c: 91:     Lcd_Write_String("POT1");
   923     0434  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   924     0435  00F3               	movwf	Lcd_Write_String@a
   925     0436  3080               	movlw	128
   926     0437  00F4               	movwf	Lcd_Write_String@a+1
   927     0438  120A  118A  20E8  120A  118A  	fcall	_Lcd_Write_String
   928     043D                     l1714:
   929                           
   930                           ;Principal.c: 94:         I2C_Master_Start();
   931     043D  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
   932     0442                     l1716:
   933                           
   934                           ;Principal.c: 95:         I2C_Master_Write(0x11);
   935     0442  3011               	movlw	17
   936     0443  00F2               	movwf	I2C_Master_Write@d
   937     0444  3000               	movlw	0
   938     0445  00F3               	movwf	I2C_Master_Write@d+1
   939     0446  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
   940     044B                     l1718:
   941                           
   942                           ;Principal.c: 96:         POT1 = I2C_Master_Read(0);
   943     044B  3000               	movlw	0
   944     044C  00F0               	movwf	I2C_Master_Read@a
   945     044D  00F1               	movwf	I2C_Master_Read@a+1
   946     044E  120A  118A  200A  120A  118A  	fcall	_I2C_Master_Read
   947     0453  0871               	movf	?_I2C_Master_Read+1,w
   948     0454  1283               	bcf	3,5	;RP0=0, select bank0
   949     0455  1303               	bcf	3,6	;RP1=0, select bank0
   950     0456  00AD               	movwf	_POT1+1
   951     0457  0870               	movf	?_I2C_Master_Read,w
   952     0458  00AC               	movwf	_POT1
   953     0459                     l1720:
   954                           
   955                           ;Principal.c: 97:         I2C_Master_Stop();
   956     0459  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
   957     045E                     l1722:
   958                           
   959                           ;Principal.c: 98:         _delay((unsigned long)((200)*(8000000/4000.0)));
   960     045E  3003               	movlw	3
   961     045F  1283               	bcf	3,5	;RP0=0, select bank0
   962     0460  1303               	bcf	3,6	;RP1=0, select bank0
   963     0461  00D3               	movwf	??_main+2
   964     0462  3008               	movlw	8
   965     0463  00D2               	movwf	??_main+1
   966     0464  3076               	movlw	118
   967     0465  00D1               	movwf	??_main
   968     0466                     u1117:
   969     0466  0BD1               	decfsz	??_main,f
   970     0467  2C66               	goto	u1117
   971     0468  0BD2               	decfsz	??_main+1,f
   972     0469  2C66               	goto	u1117
   973     046A  0BD3               	decfsz	??_main+2,f
   974     046B  2C66               	goto	u1117
   975     046C  0000               	nop
   976     046D                     l1724:
   977                           
   978                           ;Principal.c: 100:         I2C_Master_Start();
   979     046D  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
   980     0472                     l1726:
   981                           
   982                           ;Principal.c: 101:         I2C_Master_Write(0xD0);
   983     0472  30D0               	movlw	208
   984     0473  00F2               	movwf	I2C_Master_Write@d
   985     0474  3000               	movlw	0
   986     0475  00F3               	movwf	I2C_Master_Write@d+1
   987     0476  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
   988     047B                     l1728:
   989                           
   990                           ;Principal.c: 102:         I2C_Master_Write(0x00);
   991     047B  3000               	movlw	0
   992     047C  00F2               	movwf	I2C_Master_Write@d
   993     047D  00F3               	movwf	I2C_Master_Write@d+1
   994     047E  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
   995     0483                     l1730:
   996                           
   997                           ;Principal.c: 103:         I2C_Master_RepeatedStart();
   998     0483  120A  158A  2719  120A  118A  	fcall	_I2C_Master_RepeatedStart
   999     0488                     l1732:
  1000                           
  1001                           ;Principal.c: 104:         I2C_Master_Write(0xD1);
  1002     0488  30D1               	movlw	209
  1003     0489  00F2               	movwf	I2C_Master_Write@d
  1004     048A  3000               	movlw	0
  1005     048B  00F3               	movwf	I2C_Master_Write@d+1
  1006     048C  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1007     0491                     l1734:
  1008                           
  1009                           ;Principal.c: 105:         SEG = Bcd_to_Dec(I2C_Master_Read(0));
  1010     0491  3000               	movlw	0
  1011     0492  00F0               	movwf	I2C_Master_Read@a
  1012     0493  00F1               	movwf	I2C_Master_Read@a+1
  1013     0494  120A  118A  200A  120A  118A  	fcall	_I2C_Master_Read
  1014     0499  0870               	movf	?_I2C_Master_Read,w
  1015     049A  120A  158A  278A  120A  118A  	fcall	_Bcd_to_Dec
  1016     049F  1283               	bcf	3,5	;RP0=0, select bank0
  1017     04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1018     04A1  00D1               	movwf	??_main
  1019     04A2  01D2               	clrf	??_main+1
  1020     04A3  0851               	movf	??_main,w
  1021     04A4  00AA               	movwf	_SEG
  1022     04A5  0852               	movf	??_main+1,w
  1023     04A6  00AB               	movwf	_SEG+1
  1024     04A7                     l1736:
  1025                           
  1026                           ;Principal.c: 106:         I2C_Master_Stop();
  1027     04A7  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  1028     04AC                     l1738:
  1029                           
  1030                           ;Principal.c: 107:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1031     04AC  3003               	movlw	3
  1032     04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1033     04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1034     04AF  00D3               	movwf	??_main+2
  1035     04B0  3008               	movlw	8
  1036     04B1  00D2               	movwf	??_main+1
  1037     04B2  3076               	movlw	118
  1038     04B3  00D1               	movwf	??_main
  1039     04B4                     u1127:
  1040     04B4  0BD1               	decfsz	??_main,f
  1041     04B5  2CB4               	goto	u1127
  1042     04B6  0BD2               	decfsz	??_main+1,f
  1043     04B7  2CB4               	goto	u1127
  1044     04B8  0BD3               	decfsz	??_main+2,f
  1045     04B9  2CB4               	goto	u1127
  1046     04BA  0000               	nop
  1047     04BB                     l1740:
  1048                           
  1049                           ;Principal.c: 109:         I2C_Master_Start();
  1050     04BB  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  1051     04C0                     l1742:
  1052                           
  1053                           ;Principal.c: 110:         I2C_Master_Write(0xD0);
  1054     04C0  30D0               	movlw	208
  1055     04C1  00F2               	movwf	I2C_Master_Write@d
  1056     04C2  3000               	movlw	0
  1057     04C3  00F3               	movwf	I2C_Master_Write@d+1
  1058     04C4  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1059     04C9                     l1744:
  1060                           
  1061                           ;Principal.c: 111:         I2C_Master_Write(0x01);
  1062     04C9  3001               	movlw	1
  1063     04CA  00F2               	movwf	I2C_Master_Write@d
  1064     04CB  3000               	movlw	0
  1065     04CC  00F3               	movwf	I2C_Master_Write@d+1
  1066     04CD  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1067     04D2                     l1746:
  1068                           
  1069                           ;Principal.c: 112:         I2C_Master_RepeatedStart();
  1070     04D2  120A  158A  2719  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1071     04D7                     l1748:
  1072                           
  1073                           ;Principal.c: 113:         I2C_Master_Write(0xD1);
  1074     04D7  30D1               	movlw	209
  1075     04D8  00F2               	movwf	I2C_Master_Write@d
  1076     04D9  3000               	movlw	0
  1077     04DA  00F3               	movwf	I2C_Master_Write@d+1
  1078     04DB  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1079     04E0                     l1750:
  1080                           
  1081                           ;Principal.c: 114:         MIN = Bcd_to_Dec(I2C_Master_Read(0));
  1082     04E0  3000               	movlw	0
  1083     04E1  00F0               	movwf	I2C_Master_Read@a
  1084     04E2  00F1               	movwf	I2C_Master_Read@a+1
  1085     04E3  120A  118A  200A  120A  118A  	fcall	_I2C_Master_Read
  1086     04E8  0870               	movf	?_I2C_Master_Read,w
  1087     04E9  120A  158A  278A  120A  118A  	fcall	_Bcd_to_Dec
  1088     04EE  1283               	bcf	3,5	;RP0=0, select bank0
  1089     04EF  1303               	bcf	3,6	;RP1=0, select bank0
  1090     04F0  00D1               	movwf	??_main
  1091     04F1  01D2               	clrf	??_main+1
  1092     04F2  0851               	movf	??_main,w
  1093     04F3  00A8               	movwf	_MIN
  1094     04F4  0852               	movf	??_main+1,w
  1095     04F5  00A9               	movwf	_MIN+1
  1096     04F6                     l1752:
  1097                           
  1098                           ;Principal.c: 115:         I2C_Master_Stop();
  1099     04F6  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  1100     04FB                     l1754:
  1101                           
  1102                           ;Principal.c: 116:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1103     04FB  3003               	movlw	3
  1104     04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1105     04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1106     04FE  00D3               	movwf	??_main+2
  1107     04FF  3008               	movlw	8
  1108     0500  00D2               	movwf	??_main+1
  1109     0501  3076               	movlw	118
  1110     0502  00D1               	movwf	??_main
  1111     0503                     u1137:
  1112     0503  0BD1               	decfsz	??_main,f
  1113     0504  2D03               	goto	u1137
  1114     0505  0BD2               	decfsz	??_main+1,f
  1115     0506  2D03               	goto	u1137
  1116     0507  0BD3               	decfsz	??_main+2,f
  1117     0508  2D03               	goto	u1137
  1118     0509  0000               	nop
  1119     050A                     l1756:
  1120                           
  1121                           ;Principal.c: 118:         I2C_Master_Start();
  1122     050A  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  1123     050F                     l1758:
  1124                           
  1125                           ;Principal.c: 119:         I2C_Master_Write(0xD0);
  1126     050F  30D0               	movlw	208
  1127     0510  00F2               	movwf	I2C_Master_Write@d
  1128     0511  3000               	movlw	0
  1129     0512  00F3               	movwf	I2C_Master_Write@d+1
  1130     0513  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1131     0518                     l1760:
  1132                           
  1133                           ;Principal.c: 120:         I2C_Master_Write(0x02);
  1134     0518  3002               	movlw	2
  1135     0519  00F2               	movwf	I2C_Master_Write@d
  1136     051A  3000               	movlw	0
  1137     051B  00F3               	movwf	I2C_Master_Write@d+1
  1138     051C  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1139     0521                     l1762:
  1140                           
  1141                           ;Principal.c: 121:         I2C_Master_RepeatedStart();
  1142     0521  120A  158A  2719  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1143     0526                     l1764:
  1144                           
  1145                           ;Principal.c: 122:         I2C_Master_Write(0xD1);
  1146     0526  30D1               	movlw	209
  1147     0527  00F2               	movwf	I2C_Master_Write@d
  1148     0528  3000               	movlw	0
  1149     0529  00F3               	movwf	I2C_Master_Write@d+1
  1150     052A  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1151     052F                     l1766:
  1152                           
  1153                           ;Principal.c: 123:         HOR = Bcd_to_Dec(I2C_Master_Read(0));
  1154     052F  3000               	movlw	0
  1155     0530  00F0               	movwf	I2C_Master_Read@a
  1156     0531  00F1               	movwf	I2C_Master_Read@a+1
  1157     0532  120A  118A  200A  120A  118A  	fcall	_I2C_Master_Read
  1158     0537  0870               	movf	?_I2C_Master_Read,w
  1159     0538  120A  158A  278A  120A  118A  	fcall	_Bcd_to_Dec
  1160     053D  1283               	bcf	3,5	;RP0=0, select bank0
  1161     053E  1303               	bcf	3,6	;RP1=0, select bank0
  1162     053F  00D1               	movwf	??_main
  1163     0540  01D2               	clrf	??_main+1
  1164     0541  0851               	movf	??_main,w
  1165     0542  00A6               	movwf	_HOR
  1166     0543  0852               	movf	??_main+1,w
  1167     0544  00A7               	movwf	_HOR+1
  1168     0545                     l1768:
  1169                           
  1170                           ;Principal.c: 124:         I2C_Master_Stop();
  1171     0545  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  1172     054A                     l1770:
  1173                           
  1174                           ;Principal.c: 125:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1175     054A  3003               	movlw	3
  1176     054B  1283               	bcf	3,5	;RP0=0, select bank0
  1177     054C  1303               	bcf	3,6	;RP1=0, select bank0
  1178     054D  00D3               	movwf	??_main+2
  1179     054E  3008               	movlw	8
  1180     054F  00D2               	movwf	??_main+1
  1181     0550  3076               	movlw	118
  1182     0551  00D1               	movwf	??_main
  1183     0552                     u1147:
  1184     0552  0BD1               	decfsz	??_main,f
  1185     0553  2D52               	goto	u1147
  1186     0554  0BD2               	decfsz	??_main+1,f
  1187     0555  2D52               	goto	u1147
  1188     0556  0BD3               	decfsz	??_main+2,f
  1189     0557  2D52               	goto	u1147
  1190     0558  0000               	nop
  1191     0559                     l1772:
  1192                           
  1193                           ;Principal.c: 127:         I2C_Master_Start();
  1194     0559  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  1195     055E                     l1774:
  1196                           
  1197                           ;Principal.c: 128:         I2C_Master_Write(0xD0);
  1198     055E  30D0               	movlw	208
  1199     055F  00F2               	movwf	I2C_Master_Write@d
  1200     0560  3000               	movlw	0
  1201     0561  00F3               	movwf	I2C_Master_Write@d+1
  1202     0562  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1203     0567                     l1776:
  1204                           
  1205                           ;Principal.c: 129:         I2C_Master_Write(0x04);
  1206     0567  3004               	movlw	4
  1207     0568  00F2               	movwf	I2C_Master_Write@d
  1208     0569  3000               	movlw	0
  1209     056A  00F3               	movwf	I2C_Master_Write@d+1
  1210     056B  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1211     0570                     l1778:
  1212                           
  1213                           ;Principal.c: 130:         I2C_Master_RepeatedStart();
  1214     0570  120A  158A  2719  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1215     0575                     l1780:
  1216                           
  1217                           ;Principal.c: 131:         I2C_Master_Write(0xD1);
  1218     0575  30D1               	movlw	209
  1219     0576  00F2               	movwf	I2C_Master_Write@d
  1220     0577  3000               	movlw	0
  1221     0578  00F3               	movwf	I2C_Master_Write@d+1
  1222     0579  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1223     057E                     l1782:
  1224                           
  1225                           ;Principal.c: 132:         DAY = Bcd_to_Dec(I2C_Master_Read(0));
  1226     057E  3000               	movlw	0
  1227     057F  00F0               	movwf	I2C_Master_Read@a
  1228     0580  00F1               	movwf	I2C_Master_Read@a+1
  1229     0581  120A  118A  200A  120A  118A  	fcall	_I2C_Master_Read
  1230     0586  0870               	movf	?_I2C_Master_Read,w
  1231     0587  120A  158A  278A  120A  118A  	fcall	_Bcd_to_Dec
  1232     058C  1283               	bcf	3,5	;RP0=0, select bank0
  1233     058D  1303               	bcf	3,6	;RP1=0, select bank0
  1234     058E  00D1               	movwf	??_main
  1235     058F  01D2               	clrf	??_main+1
  1236     0590  0851               	movf	??_main,w
  1237     0591  00A4               	movwf	_DAY
  1238     0592  0852               	movf	??_main+1,w
  1239     0593  00A5               	movwf	_DAY+1
  1240     0594                     l1784:
  1241                           
  1242                           ;Principal.c: 133:         I2C_Master_Stop();
  1243     0594  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  1244     0599                     l1786:
  1245                           
  1246                           ;Principal.c: 134:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1247     0599  3003               	movlw	3
  1248     059A  1283               	bcf	3,5	;RP0=0, select bank0
  1249     059B  1303               	bcf	3,6	;RP1=0, select bank0
  1250     059C  00D3               	movwf	??_main+2
  1251     059D  3008               	movlw	8
  1252     059E  00D2               	movwf	??_main+1
  1253     059F  3076               	movlw	118
  1254     05A0  00D1               	movwf	??_main
  1255     05A1                     u1157:
  1256     05A1  0BD1               	decfsz	??_main,f
  1257     05A2  2DA1               	goto	u1157
  1258     05A3  0BD2               	decfsz	??_main+1,f
  1259     05A4  2DA1               	goto	u1157
  1260     05A5  0BD3               	decfsz	??_main+2,f
  1261     05A6  2DA1               	goto	u1157
  1262     05A7  0000               	nop
  1263     05A8                     l1788:
  1264                           
  1265                           ;Principal.c: 136:         I2C_Master_Start();
  1266     05A8  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  1267     05AD                     l1790:
  1268                           
  1269                           ;Principal.c: 137:         I2C_Master_Write(0xD0);
  1270     05AD  30D0               	movlw	208
  1271     05AE  00F2               	movwf	I2C_Master_Write@d
  1272     05AF  3000               	movlw	0
  1273     05B0  00F3               	movwf	I2C_Master_Write@d+1
  1274     05B1  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1275     05B6                     l1792:
  1276                           
  1277                           ;Principal.c: 138:         I2C_Master_Write(0x05);
  1278     05B6  3005               	movlw	5
  1279     05B7  00F2               	movwf	I2C_Master_Write@d
  1280     05B8  3000               	movlw	0
  1281     05B9  00F3               	movwf	I2C_Master_Write@d+1
  1282     05BA  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1283     05BF                     l1794:
  1284                           
  1285                           ;Principal.c: 139:         I2C_Master_RepeatedStart();
  1286     05BF  120A  158A  2719  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1287     05C4                     l1796:
  1288                           
  1289                           ;Principal.c: 140:         I2C_Master_Write(0xD1);
  1290     05C4  30D1               	movlw	209
  1291     05C5  00F2               	movwf	I2C_Master_Write@d
  1292     05C6  3000               	movlw	0
  1293     05C7  00F3               	movwf	I2C_Master_Write@d+1
  1294     05C8  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1295     05CD                     l1798:
  1296                           
  1297                           ;Principal.c: 141:         MON = Bcd_to_Dec(I2C_Master_Read(0));
  1298     05CD  3000               	movlw	0
  1299     05CE  00F0               	movwf	I2C_Master_Read@a
  1300     05CF  00F1               	movwf	I2C_Master_Read@a+1
  1301     05D0  120A  118A  200A  120A  118A  	fcall	_I2C_Master_Read
  1302     05D5  0870               	movf	?_I2C_Master_Read,w
  1303     05D6  120A  158A  278A  120A  118A  	fcall	_Bcd_to_Dec
  1304     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1305     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1306     05DD  00D1               	movwf	??_main
  1307     05DE  01D2               	clrf	??_main+1
  1308     05DF  0851               	movf	??_main,w
  1309     05E0  00A2               	movwf	_MON
  1310     05E1  0852               	movf	??_main+1,w
  1311     05E2  00A3               	movwf	_MON+1
  1312     05E3                     l1800:
  1313                           
  1314                           ;Principal.c: 142:         I2C_Master_Stop();
  1315     05E3  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  1316     05E8                     l1802:
  1317                           
  1318                           ;Principal.c: 143:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1319     05E8  3003               	movlw	3
  1320     05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1321     05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1322     05EB  00D3               	movwf	??_main+2
  1323     05EC  3008               	movlw	8
  1324     05ED  00D2               	movwf	??_main+1
  1325     05EE  3076               	movlw	118
  1326     05EF  00D1               	movwf	??_main
  1327     05F0                     u1167:
  1328     05F0  0BD1               	decfsz	??_main,f
  1329     05F1  2DF0               	goto	u1167
  1330     05F2  0BD2               	decfsz	??_main+1,f
  1331     05F3  2DF0               	goto	u1167
  1332     05F4  0BD3               	decfsz	??_main+2,f
  1333     05F5  2DF0               	goto	u1167
  1334     05F6  0000               	nop
  1335     05F7                     l1804:
  1336                           
  1337                           ;Principal.c: 145:         I2C_Master_Start();
  1338     05F7  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  1339     05FC                     l1806:
  1340                           
  1341                           ;Principal.c: 146:         I2C_Master_Write(0xD0);
  1342     05FC  30D0               	movlw	208
  1343     05FD  00F2               	movwf	I2C_Master_Write@d
  1344     05FE  3000               	movlw	0
  1345     05FF  00F3               	movwf	I2C_Master_Write@d+1
  1346     0600  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1347     0605                     l1808:
  1348                           
  1349                           ;Principal.c: 147:         I2C_Master_Write(0x06);
  1350     0605  3006               	movlw	6
  1351     0606  00F2               	movwf	I2C_Master_Write@d
  1352     0607  3000               	movlw	0
  1353     0608  00F3               	movwf	I2C_Master_Write@d+1
  1354     0609  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1355     060E                     l1810:
  1356                           
  1357                           ;Principal.c: 148:         I2C_Master_RepeatedStart();
  1358     060E  120A  158A  2719  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1359     0613                     l1812:
  1360                           
  1361                           ;Principal.c: 149:         I2C_Master_Write(0xD1);
  1362     0613  30D1               	movlw	209
  1363     0614  00F2               	movwf	I2C_Master_Write@d
  1364     0615  3000               	movlw	0
  1365     0616  00F3               	movwf	I2C_Master_Write@d+1
  1366     0617  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  1367     061C                     l1814:
  1368                           
  1369                           ;Principal.c: 150:         YEAR = Bcd_to_Dec(I2C_Master_Read(0));
  1370     061C  3000               	movlw	0
  1371     061D  00F0               	movwf	I2C_Master_Read@a
  1372     061E  00F1               	movwf	I2C_Master_Read@a+1
  1373     061F  120A  118A  200A  120A  118A  	fcall	_I2C_Master_Read
  1374     0624  0870               	movf	?_I2C_Master_Read,w
  1375     0625  120A  158A  278A  120A  118A  	fcall	_Bcd_to_Dec
  1376     062A  1283               	bcf	3,5	;RP0=0, select bank0
  1377     062B  1303               	bcf	3,6	;RP1=0, select bank0
  1378     062C  00D1               	movwf	??_main
  1379     062D  01D2               	clrf	??_main+1
  1380     062E  0851               	movf	??_main,w
  1381     062F  00A0               	movwf	_YEAR
  1382     0630  0852               	movf	??_main+1,w
  1383     0631  00A1               	movwf	_YEAR+1
  1384     0632                     l1816:
  1385                           
  1386                           ;Principal.c: 151:         I2C_Master_Stop();
  1387     0632  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  1388     0637                     l1818:
  1389                           
  1390                           ;Principal.c: 152:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1391     0637  3003               	movlw	3
  1392     0638  1283               	bcf	3,5	;RP0=0, select bank0
  1393     0639  1303               	bcf	3,6	;RP1=0, select bank0
  1394     063A  00D3               	movwf	??_main+2
  1395     063B  3008               	movlw	8
  1396     063C  00D2               	movwf	??_main+1
  1397     063D  3076               	movlw	118
  1398     063E  00D1               	movwf	??_main
  1399     063F                     u1177:
  1400     063F  0BD1               	decfsz	??_main,f
  1401     0640  2E3F               	goto	u1177
  1402     0641  0BD2               	decfsz	??_main+1,f
  1403     0642  2E3F               	goto	u1177
  1404     0643  0BD3               	decfsz	??_main+2,f
  1405     0644  2E3F               	goto	u1177
  1406     0645  0000               	nop
  1407     0646                     l1820:
  1408                           
  1409                           ;Principal.c: 154:         Lcd_Set_Cursor(1, 6);
  1410     0646  3006               	movlw	6
  1411     0647  00F4               	movwf	Lcd_Set_Cursor@b
  1412     0648  3001               	movlw	1
  1413     0649  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1414     064E                     l1822:
  1415                           
  1416                           ;Principal.c: 155:         sprintf(cDAY, "%d", DAY);
  1417     064E  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1418     064F  1283               	bcf	3,5	;RP0=0, select bank0
  1419     0650  1303               	bcf	3,6	;RP1=0, select bank0
  1420     0651  00C4               	movwf	sprintf@f
  1421     0652  0825               	movf	_DAY+1,w
  1422     0653  00C6               	movwf	?_sprintf+2
  1423     0654  0824               	movf	_DAY,w
  1424     0655  00C5               	movwf	?_sprintf+1
  1425     0656  3038               	movlw	(low (_cDAY| 0))& (0+255)
  1426     0657  120A  118A  2330  120A  118A  	fcall	_sprintf
  1427     065C                     l1824:
  1428                           
  1429                           ;Principal.c: 156:         if(DAY < 10){
  1430     065C  1283               	bcf	3,5	;RP0=0, select bank0
  1431     065D  1303               	bcf	3,6	;RP1=0, select bank0
  1432     065E  0825               	movf	_DAY+1,w
  1433     065F  3A80               	xorlw	128
  1434     0660  00FF               	movwf	btemp+1
  1435     0661  3080               	movlw	128
  1436     0662  027F               	subwf	btemp+1,w
  1437     0663  1D03               	skipz
  1438     0664  2E67               	goto	u1045
  1439     0665  300A               	movlw	10
  1440     0666  0224               	subwf	_DAY,w
  1441     0667                     u1045:
  1442     0667  1803               	skipnc
  1443     0668  2E6A               	goto	u1041
  1444     0669  2E6B               	goto	u1040
  1445     066A                     u1041:
  1446     066A  2E71               	goto	l1828
  1447     066B                     u1040:
  1448     066B                     l1826:
  1449                           
  1450                           ;Principal.c: 157:             cDAY[1] = cDAY[0];
  1451     066B  1283               	bcf	3,5	;RP0=0, select bank0
  1452     066C  1303               	bcf	3,6	;RP1=0, select bank0
  1453     066D  0838               	movf	_cDAY,w
  1454     066E  00B9               	movwf	_cDAY+1
  1455                           
  1456                           ;Principal.c: 158:             cDAY[0] = '0';
  1457     066F  3030               	movlw	48
  1458     0670  00B8               	movwf	_cDAY
  1459     0671                     l1828:
  1460                           
  1461                           ;Principal.c: 160:         Lcd_Write_String(cDAY);
  1462     0671  3038               	movlw	(low (_cDAY| 0))& (0+255)
  1463     0672  00F3               	movwf	Lcd_Write_String@a
  1464     0673  3000               	movlw	0
  1465     0674  00F4               	movwf	Lcd_Write_String@a+1
  1466     0675  120A  118A  20E8  120A  118A  	fcall	_Lcd_Write_String
  1467     067A                     l1830:
  1468                           
  1469                           ;Principal.c: 161:         Lcd_Set_Cursor(1, 8);
  1470     067A  3008               	movlw	8
  1471     067B  00F4               	movwf	Lcd_Set_Cursor@b
  1472     067C  3001               	movlw	1
  1473     067D  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1474     0682                     l1832:
  1475                           
  1476                           ;Principal.c: 162:         Lcd_Write_Char('/');
  1477     0682  302F               	movlw	47
  1478     0683  120A  158A  2774  120A  118A  	fcall	_Lcd_Write_Char
  1479     0688                     l1834:
  1480                           
  1481                           ;Principal.c: 164:         Lcd_Set_Cursor(1, 9);
  1482     0688  3009               	movlw	9
  1483     0689  00F4               	movwf	Lcd_Set_Cursor@b
  1484     068A  3001               	movlw	1
  1485     068B  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1486     0690                     l1836:
  1487                           
  1488                           ;Principal.c: 165:         sprintf(cMON, "%d", MON);
  1489     0690  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1490     0691  1283               	bcf	3,5	;RP0=0, select bank0
  1491     0692  1303               	bcf	3,6	;RP1=0, select bank0
  1492     0693  00C4               	movwf	sprintf@f
  1493     0694  0823               	movf	_MON+1,w
  1494     0695  00C6               	movwf	?_sprintf+2
  1495     0696  0822               	movf	_MON,w
  1496     0697  00C5               	movwf	?_sprintf+1
  1497     0698  3035               	movlw	(low (_cMON| 0))& (0+255)
  1498     0699  120A  118A  2330  120A  118A  	fcall	_sprintf
  1499     069E                     l1838:
  1500                           
  1501                           ;Principal.c: 166:         if(MON < 10){
  1502     069E  1283               	bcf	3,5	;RP0=0, select bank0
  1503     069F  1303               	bcf	3,6	;RP1=0, select bank0
  1504     06A0  0823               	movf	_MON+1,w
  1505     06A1  3A80               	xorlw	128
  1506     06A2  00FF               	movwf	btemp+1
  1507     06A3  3080               	movlw	128
  1508     06A4  027F               	subwf	btemp+1,w
  1509     06A5  1D03               	skipz
  1510     06A6  2EA9               	goto	u1055
  1511     06A7  300A               	movlw	10
  1512     06A8  0222               	subwf	_MON,w
  1513     06A9                     u1055:
  1514     06A9  1803               	skipnc
  1515     06AA  2EAC               	goto	u1051
  1516     06AB  2EAD               	goto	u1050
  1517     06AC                     u1051:
  1518     06AC  2EB3               	goto	l1842
  1519     06AD                     u1050:
  1520     06AD                     l1840:
  1521                           
  1522                           ;Principal.c: 167:             cMON[1] = cMON[0];
  1523     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1524     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1525     06AF  0835               	movf	_cMON,w
  1526     06B0  00B6               	movwf	_cMON+1
  1527                           
  1528                           ;Principal.c: 168:             cMON[0] = '0';
  1529     06B1  3030               	movlw	48
  1530     06B2  00B5               	movwf	_cMON
  1531     06B3                     l1842:
  1532                           
  1533                           ;Principal.c: 170:         Lcd_Write_String(cMON);
  1534     06B3  3035               	movlw	(low (_cMON| 0))& (0+255)
  1535     06B4  00F3               	movwf	Lcd_Write_String@a
  1536     06B5  3000               	movlw	0
  1537     06B6  00F4               	movwf	Lcd_Write_String@a+1
  1538     06B7  120A  118A  20E8  120A  118A  	fcall	_Lcd_Write_String
  1539     06BC                     l1844:
  1540                           
  1541                           ;Principal.c: 171:         Lcd_Set_Cursor(1, 11);
  1542     06BC  300B               	movlw	11
  1543     06BD  00F4               	movwf	Lcd_Set_Cursor@b
  1544     06BE  3001               	movlw	1
  1545     06BF  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1546     06C4                     l1846:
  1547                           
  1548                           ;Principal.c: 172:         Lcd_Write_Char('/');
  1549     06C4  302F               	movlw	47
  1550     06C5  120A  158A  2774  120A  118A  	fcall	_Lcd_Write_Char
  1551     06CA                     l1848:
  1552                           
  1553                           ;Principal.c: 174:         Lcd_Set_Cursor(1, 12);
  1554     06CA  300C               	movlw	12
  1555     06CB  00F4               	movwf	Lcd_Set_Cursor@b
  1556     06CC  3001               	movlw	1
  1557     06CD  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1558     06D2                     l1850:
  1559                           
  1560                           ;Principal.c: 175:         sprintf(cYEAR, "%d", YEAR);
  1561     06D2  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1562     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1563     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1564     06D5  00C4               	movwf	sprintf@f
  1565     06D6  0821               	movf	_YEAR+1,w
  1566     06D7  00C6               	movwf	?_sprintf+2
  1567     06D8  0820               	movf	_YEAR,w
  1568     06D9  00C5               	movwf	?_sprintf+1
  1569     06DA  3032               	movlw	(low (_cYEAR| 0))& (0+255)
  1570     06DB  120A  118A  2330  120A  118A  	fcall	_sprintf
  1571     06E0                     l1852:
  1572                           
  1573                           ;Principal.c: 176:         Lcd_Write_String(cYEAR);
  1574     06E0  3032               	movlw	(low (_cYEAR| 0))& (0+255)
  1575     06E1  00F3               	movwf	Lcd_Write_String@a
  1576     06E2  3000               	movlw	0
  1577     06E3  00F4               	movwf	Lcd_Write_String@a+1
  1578     06E4  120A  118A  20E8  120A  118A  	fcall	_Lcd_Write_String
  1579     06E9                     l1854:
  1580                           
  1581                           ;Principal.c: 178:         Lcd_Set_Cursor(2, 1);
  1582     06E9  01F4               	clrf	Lcd_Set_Cursor@b
  1583     06EA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1584     06EB  3002               	movlw	2
  1585     06EC  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1586     06F1                     l1856:
  1587                           
  1588                           ;Principal.c: 179:         sprintf(cPOT1, "%d", POT1);
  1589     06F1  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1590     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1591     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1592     06F4  00C4               	movwf	sprintf@f
  1593     06F5  082D               	movf	_POT1+1,w
  1594     06F6  00C6               	movwf	?_sprintf+2
  1595     06F7  082C               	movf	_POT1,w
  1596     06F8  00C5               	movwf	?_sprintf+1
  1597     06F9  302E               	movlw	(low (_cPOT1| 0))& (0+255)
  1598     06FA  120A  118A  2330  120A  118A  	fcall	_sprintf
  1599     06FF                     l1858:
  1600                           
  1601                           ;Principal.c: 180:         if(POT1 < 10){
  1602     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1603     0700  1303               	bcf	3,6	;RP1=0, select bank0
  1604     0701  082D               	movf	_POT1+1,w
  1605     0702  3A80               	xorlw	128
  1606     0703  00FF               	movwf	btemp+1
  1607     0704  3080               	movlw	128
  1608     0705  027F               	subwf	btemp+1,w
  1609     0706  1D03               	skipz
  1610     0707  2F0A               	goto	u1065
  1611     0708  300A               	movlw	10
  1612     0709  022C               	subwf	_POT1,w
  1613     070A                     u1065:
  1614     070A  1803               	skipnc
  1615     070B  2F0D               	goto	u1061
  1616     070C  2F0E               	goto	u1060
  1617     070D                     u1061:
  1618     070D  2F17               	goto	l1862
  1619     070E                     u1060:
  1620     070E                     l1860:
  1621                           
  1622                           ;Principal.c: 181:             cPOT1[2] = cPOT1[0];
  1623     070E  1283               	bcf	3,5	;RP0=0, select bank0
  1624     070F  1303               	bcf	3,6	;RP1=0, select bank0
  1625     0710  082E               	movf	_cPOT1,w
  1626     0711  00B0               	movwf	_cPOT1+2
  1627                           
  1628                           ;Principal.c: 182:             cPOT1[1] = '0';
  1629     0712  3030               	movlw	48
  1630     0713  00AF               	movwf	_cPOT1+1
  1631                           
  1632                           ;Principal.c: 183:             cPOT1[0] = '0';
  1633     0714  3030               	movlw	48
  1634     0715  00AE               	movwf	_cPOT1
  1635                           
  1636                           ;Principal.c: 184:         }
  1637     0716  2F2E               	goto	l1866
  1638     0717                     l1862:
  1639     0717  1283               	bcf	3,5	;RP0=0, select bank0
  1640     0718  1303               	bcf	3,6	;RP1=0, select bank0
  1641     0719  082D               	movf	_POT1+1,w
  1642     071A  3A80               	xorlw	128
  1643     071B  00FF               	movwf	btemp+1
  1644     071C  3080               	movlw	128
  1645     071D  027F               	subwf	btemp+1,w
  1646     071E  1D03               	skipz
  1647     071F  2F22               	goto	u1075
  1648     0720  3064               	movlw	100
  1649     0721  022C               	subwf	_POT1,w
  1650     0722                     u1075:
  1651     0722  1803               	skipnc
  1652     0723  2F25               	goto	u1071
  1653     0724  2F26               	goto	u1070
  1654     0725                     u1071:
  1655     0725  2F2E               	goto	l1866
  1656     0726                     u1070:
  1657     0726                     l1864:
  1658                           
  1659                           ;Principal.c: 186:             cPOT1[2] = cPOT1[1];
  1660     0726  1283               	bcf	3,5	;RP0=0, select bank0
  1661     0727  1303               	bcf	3,6	;RP1=0, select bank0
  1662     0728  082F               	movf	_cPOT1+1,w
  1663     0729  00B0               	movwf	_cPOT1+2
  1664                           
  1665                           ;Principal.c: 187:             cPOT1[1] = cPOT1[0];
  1666     072A  082E               	movf	_cPOT1,w
  1667     072B  00AF               	movwf	_cPOT1+1
  1668                           
  1669                           ;Principal.c: 188:             cPOT1[0] = '0';
  1670     072C  3030               	movlw	48
  1671     072D  00AE               	movwf	_cPOT1
  1672     072E                     l1866:
  1673                           
  1674                           ;Principal.c: 190:         Lcd_Write_String(cPOT1);
  1675     072E  302E               	movlw	(low (_cPOT1| 0))& (0+255)
  1676     072F  00F3               	movwf	Lcd_Write_String@a
  1677     0730  3000               	movlw	0
  1678     0731  00F4               	movwf	Lcd_Write_String@a+1
  1679     0732  120A  118A  20E8  120A  118A  	fcall	_Lcd_Write_String
  1680     0737                     l1868:
  1681                           
  1682                           ;Principal.c: 193:         Lcd_Set_Cursor(2, 6);
  1683     0737  3006               	movlw	6
  1684     0738  00F4               	movwf	Lcd_Set_Cursor@b
  1685     0739  3002               	movlw	2
  1686     073A  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1687     073F                     l1870:
  1688                           
  1689                           ;Principal.c: 194:         sprintf(cHOR, "%d", HOR);
  1690     073F  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1691     0740  1283               	bcf	3,5	;RP0=0, select bank0
  1692     0741  1303               	bcf	3,6	;RP1=0, select bank0
  1693     0742  00C4               	movwf	sprintf@f
  1694     0743  0827               	movf	_HOR+1,w
  1695     0744  00C6               	movwf	?_sprintf+2
  1696     0745  0826               	movf	_HOR,w
  1697     0746  00C5               	movwf	?_sprintf+1
  1698     0747  303B               	movlw	(low (_cHOR| 0))& (0+255)
  1699     0748  120A  118A  2330  120A  118A  	fcall	_sprintf
  1700     074D                     l1872:
  1701                           
  1702                           ;Principal.c: 195:         if(HOR < 10){
  1703     074D  1283               	bcf	3,5	;RP0=0, select bank0
  1704     074E  1303               	bcf	3,6	;RP1=0, select bank0
  1705     074F  0827               	movf	_HOR+1,w
  1706     0750  3A80               	xorlw	128
  1707     0751  00FF               	movwf	btemp+1
  1708     0752  3080               	movlw	128
  1709     0753  027F               	subwf	btemp+1,w
  1710     0754  1D03               	skipz
  1711     0755  2F58               	goto	u1085
  1712     0756  300A               	movlw	10
  1713     0757  0226               	subwf	_HOR,w
  1714     0758                     u1085:
  1715     0758  1803               	skipnc
  1716     0759  2F5B               	goto	u1081
  1717     075A  2F5C               	goto	u1080
  1718     075B                     u1081:
  1719     075B  2F62               	goto	l1876
  1720     075C                     u1080:
  1721     075C                     l1874:
  1722                           
  1723                           ;Principal.c: 196:             cHOR[1] = cHOR[0];
  1724     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1725     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1726     075E  083B               	movf	_cHOR,w
  1727     075F  00BC               	movwf	_cHOR+1
  1728                           
  1729                           ;Principal.c: 197:             cHOR[0] = '0';
  1730     0760  3030               	movlw	48
  1731     0761  00BB               	movwf	_cHOR
  1732     0762                     l1876:
  1733                           
  1734                           ;Principal.c: 199:         Lcd_Write_String(cHOR);
  1735     0762  303B               	movlw	(low (_cHOR| 0))& (0+255)
  1736     0763  00F3               	movwf	Lcd_Write_String@a
  1737     0764  3000               	movlw	0
  1738     0765  00F4               	movwf	Lcd_Write_String@a+1
  1739     0766  120A  118A  20E8  120A  118A  	fcall	_Lcd_Write_String
  1740     076B                     l1878:
  1741                           
  1742                           ;Principal.c: 200:         Lcd_Set_Cursor(2, 8);
  1743     076B  3008               	movlw	8
  1744     076C  00F4               	movwf	Lcd_Set_Cursor@b
  1745     076D  3002               	movlw	2
  1746     076E  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1747     0773                     l1880:
  1748                           
  1749                           ;Principal.c: 201:         Lcd_Write_Char(':');
  1750     0773  303A               	movlw	58
  1751     0774  120A  158A  2774  120A  118A  	fcall	_Lcd_Write_Char
  1752     0779                     l1882:
  1753                           
  1754                           ;Principal.c: 203:         Lcd_Set_Cursor(2, 9);
  1755     0779  3009               	movlw	9
  1756     077A  00F4               	movwf	Lcd_Set_Cursor@b
  1757     077B  3002               	movlw	2
  1758     077C  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1759     0781                     l1884:
  1760                           
  1761                           ;Principal.c: 204:         sprintf(cMIN, "%d", MIN);
  1762     0781  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1763     0782  1283               	bcf	3,5	;RP0=0, select bank0
  1764     0783  1303               	bcf	3,6	;RP1=0, select bank0
  1765     0784  00C4               	movwf	sprintf@f
  1766     0785  0829               	movf	_MIN+1,w
  1767     0786  00C6               	movwf	?_sprintf+2
  1768     0787  0828               	movf	_MIN,w
  1769     0788  00C5               	movwf	?_sprintf+1
  1770     0789  303E               	movlw	(low (_cMIN| 0))& (0+255)
  1771     078A  120A  118A  2330  120A  118A  	fcall	_sprintf
  1772     078F                     l1886:
  1773                           
  1774                           ;Principal.c: 205:         if(MIN < 10){
  1775     078F  1283               	bcf	3,5	;RP0=0, select bank0
  1776     0790  1303               	bcf	3,6	;RP1=0, select bank0
  1777     0791  0829               	movf	_MIN+1,w
  1778     0792  3A80               	xorlw	128
  1779     0793  00FF               	movwf	btemp+1
  1780     0794  3080               	movlw	128
  1781     0795  027F               	subwf	btemp+1,w
  1782     0796  1D03               	skipz
  1783     0797  2F9A               	goto	u1095
  1784     0798  300A               	movlw	10
  1785     0799  0228               	subwf	_MIN,w
  1786     079A                     u1095:
  1787     079A  1803               	skipnc
  1788     079B  2F9D               	goto	u1091
  1789     079C  2F9E               	goto	u1090
  1790     079D                     u1091:
  1791     079D  2FA4               	goto	l1890
  1792     079E                     u1090:
  1793     079E                     l1888:
  1794                           
  1795                           ;Principal.c: 206:             cMIN[1] = cMIN[0];
  1796     079E  1283               	bcf	3,5	;RP0=0, select bank0
  1797     079F  1303               	bcf	3,6	;RP1=0, select bank0
  1798     07A0  083E               	movf	_cMIN,w
  1799     07A1  00BF               	movwf	_cMIN+1
  1800                           
  1801                           ;Principal.c: 207:             cMIN[0] = '0';
  1802     07A2  3030               	movlw	48
  1803     07A3  00BE               	movwf	_cMIN
  1804     07A4                     l1890:
  1805                           
  1806                           ;Principal.c: 209:         Lcd_Write_String(cMIN);
  1807     07A4  303E               	movlw	(low (_cMIN| 0))& (0+255)
  1808     07A5  00F3               	movwf	Lcd_Write_String@a
  1809     07A6  3000               	movlw	0
  1810     07A7  00F4               	movwf	Lcd_Write_String@a+1
  1811     07A8  120A  118A  20E8  120A  118A  	fcall	_Lcd_Write_String
  1812     07AD                     l1892:
  1813                           
  1814                           ;Principal.c: 210:         Lcd_Set_Cursor(2, 11);
  1815     07AD  300B               	movlw	11
  1816     07AE  00F4               	movwf	Lcd_Set_Cursor@b
  1817     07AF  3002               	movlw	2
  1818     07B0  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1819     07B5                     l1894:
  1820                           
  1821                           ;Principal.c: 211:         Lcd_Write_Char(':');
  1822     07B5  303A               	movlw	58
  1823     07B6  120A  158A  2774  120A  118A  	fcall	_Lcd_Write_Char
  1824     07BB                     l1896:
  1825                           
  1826                           ;Principal.c: 213:         Lcd_Set_Cursor(2, 12);
  1827     07BB  300C               	movlw	12
  1828     07BC  00F4               	movwf	Lcd_Set_Cursor@b
  1829     07BD  3002               	movlw	2
  1830     07BE  120A  158A  27BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1831     07C3                     l1898:
  1832                           
  1833                           ;Principal.c: 214:         sprintf(cSEG, "%d", SEG);
  1834     07C3  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1835     07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1836     07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1837     07C6  00C4               	movwf	sprintf@f
  1838     07C7  082B               	movf	_SEG+1,w
  1839     07C8  00C6               	movwf	?_sprintf+2
  1840     07C9  082A               	movf	_SEG,w
  1841     07CA  00C5               	movwf	?_sprintf+1
  1842     07CB  3041               	movlw	(low (_cSEG| 0))& (0+255)
  1843     07CC  120A  118A  2330  120A  118A  	fcall	_sprintf
  1844     07D1                     l1900:
  1845                           
  1846                           ;Principal.c: 215:         if(SEG < 10){
  1847     07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1848     07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1849     07D3  082B               	movf	_SEG+1,w
  1850     07D4  3A80               	xorlw	128
  1851     07D5  00FF               	movwf	btemp+1
  1852     07D6  3080               	movlw	128
  1853     07D7  027F               	subwf	btemp+1,w
  1854     07D8  1D03               	skipz
  1855     07D9  2FDC               	goto	u1105
  1856     07DA  300A               	movlw	10
  1857     07DB  022A               	subwf	_SEG,w
  1858     07DC                     u1105:
  1859     07DC  1803               	skipnc
  1860     07DD  2FDF               	goto	u1101
  1861     07DE  2FE0               	goto	u1100
  1862     07DF                     u1101:
  1863     07DF  2FE6               	goto	l1904
  1864     07E0                     u1100:
  1865     07E0                     l1902:
  1866                           
  1867                           ;Principal.c: 216:             cSEG[1] = cSEG[0];
  1868     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1869     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1870     07E2  0841               	movf	_cSEG,w
  1871     07E3  00C2               	movwf	_cSEG+1
  1872                           
  1873                           ;Principal.c: 217:             cSEG[0] = '0';
  1874     07E4  3030               	movlw	48
  1875     07E5  00C1               	movwf	_cSEG
  1876     07E6                     l1904:
  1877                           
  1878                           ;Principal.c: 219:         Lcd_Write_String(cSEG);
  1879     07E6  3041               	movlw	(low (_cSEG| 0))& (0+255)
  1880     07E7  00F3               	movwf	Lcd_Write_String@a
  1881     07E8  3000               	movlw	0
  1882     07E9  00F4               	movwf	Lcd_Write_String@a+1
  1883     07EA  120A  118A  20E8  120A  118A  	fcall	_Lcd_Write_String
  1884     07EF  2C3D               	goto	l1714
  1885     07F0  120A  118A  2800   	ljmp	start
  1886     07F3                     __end_of_main:
  1887                           
  1888                           	psect	text1
  1889     0330                     __ptext1:	
  1890 ;; *************** function _sprintf *****************
  1891 ;; Defined at:
  1892 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  sp              1    wreg     PTR unsigned char 
  1895 ;;		 -> cSEG(3), cMIN(3), cHOR(3), cPOT1(4), 
  1896 ;;		 -> cYEAR(3), cMON(3), cDAY(3), 
  1897 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1898 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  1899 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1902 ;;		 -> cSEG(3), cMIN(3), cHOR(3), cPOT1(4), 
  1903 ;;		 -> cYEAR(3), cMON(3), cDAY(3), 
  1904 ;;  tmpval          4    0        struct .
  1905 ;;  val             2    9[BANK0 ] unsigned int 
  1906 ;;  cp              2    0        PTR const unsigned char 
  1907 ;;  len             2    0        unsigned int 
  1908 ;;  c               1   12[BANK0 ] unsigned char 
  1909 ;;  prec            1    8[BANK0 ] char 
  1910 ;;  flag            1    7[BANK0 ] unsigned char 
  1911 ;;  ap              1    6[BANK0 ] PTR void [1]
  1912 ;;		 -> ?_sprintf(2), 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2    0[BANK0 ] int 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       3       0       0       0
  1923 ;;      Locals:         0       7       0       0       0
  1924 ;;      Temps:          0       3       0       0       0
  1925 ;;      Totals:         0      13       0       0       0
  1926 ;;Total ram usage:       13 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 1
  1929 ;; This function calls:
  1930 ;;		___lwdiv
  1931 ;;		___lwmod
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937     0330                     _sprintf:	
  1938                           ;psect for function _sprintf
  1939                           
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1943                           ;sprintf@sp stored from wreg
  1944     0330  1283               	bcf	3,5	;RP0=0, select bank0
  1945     0331  1303               	bcf	3,6	;RP1=0, select bank0
  1946     0332  00CF               	movwf	sprintf@sp
  1947     0333                     l1648:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1950     0333  3045               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1951     0334  00CA               	movwf	sprintf@ap
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1954     0335  2BF5               	goto	l1700
  1955     0336                     l1650:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1958     0336  3025               	movlw	37
  1959     0337  0650               	xorwf	sprintf@c,w
  1960     0338  1903               	btfsc	3,2
  1961     0339  2B3B               	goto	u971
  1962     033A  2B3C               	goto	u970
  1963     033B                     u971:
  1964     033B  2B46               	goto	l1656
  1965     033C                     u970:
  1966     033C                     l1652:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1969     033C  084F               	movf	sprintf@sp,w
  1970     033D  0084               	movwf	4
  1971     033E  0850               	movf	sprintf@c,w
  1972     033F  1383               	bcf	3,7	;select IRP bank0
  1973     0340  0080               	movwf	0
  1974     0341                     l1654:
  1975     0341  3001               	movlw	1
  1976     0342  00C7               	movwf	??_sprintf
  1977     0343  0847               	movf	??_sprintf,w
  1978     0344  07CF               	addwf	sprintf@sp,f
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1981     0345  2BF5               	goto	l1700
  1982     0346                     l1656:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1985     0346  01CB               	clrf	sprintf@flag
  1986     0347                     l1660:	
  1987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1988                           
  1989     0347  3001               	movlw	1
  1990     0348  07C4               	addwf	sprintf@f,f
  1991     0349  30FF               	movlw	-1
  1992     034A  0744               	addwf	sprintf@f,w
  1993     034B  0084               	movwf	4
  1994     034C  120A  158A  200A  120A  118A  	fcall	stringdir
  1995     0351  00D0               	movwf	sprintf@c
  1996     0352  00C7               	movwf	??_sprintf
  1997     0353  01C8               	clrf	??_sprintf+1
  1998                           
  1999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2000                           ; Switch size 1, requested type "simple"
  2001                           ; Number of cases is 1, Range of values is 0 to 0
  2002                           ; switch strategies available:
  2003                           ; Name         Instructions Cycles
  2004                           ; simple_byte            4     3 (average)
  2005                           ; direct_byte           11     8 (fixed)
  2006                           ; jumptable            260     6 (fixed)
  2007                           ;	Chosen strategy is simple_byte
  2008     0354  0848               	movf	??_sprintf+1,w
  2009     0355  3A00               	xorlw	0	; case 0
  2010     0356  1903               	skipnz
  2011     0357  2B59               	goto	l1930
  2012     0358  2BF5               	goto	l1700
  2013     0359                     l1930:
  2014                           
  2015                           ; Switch size 1, requested type "simple"
  2016                           ; Number of cases is 3, Range of values is 0 to 105
  2017                           ; switch strategies available:
  2018                           ; Name         Instructions Cycles
  2019                           ; simple_byte           10     6 (average)
  2020                           ; jumptable            260     6 (fixed)
  2021                           ;	Chosen strategy is simple_byte
  2022     0359  0847               	movf	??_sprintf,w
  2023     035A  3A00               	xorlw	0	; case 0
  2024     035B  1903               	skipnz
  2025     035C  2C05               	goto	l1702
  2026     035D  3A64               	xorlw	100	; case 100
  2027     035E  1903               	skipnz
  2028     035F  2B64               	goto	l1662
  2029     0360  3A0D               	xorlw	13	; case 105
  2030     0361  1903               	skipnz
  2031     0362  2B64               	goto	l1662
  2032     0363  2BF5               	goto	l1700
  2033     0364                     l1662:
  2034                           
  2035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2036     0364  084A               	movf	sprintf@ap,w
  2037     0365  0084               	movwf	4
  2038     0366  1383               	bcf	3,7	;select IRP bank0
  2039     0367  0800               	movf	0,w
  2040     0368  00CD               	movwf	sprintf@val
  2041     0369  0A84               	incf	4,f
  2042     036A  0800               	movf	0,w
  2043     036B  00CE               	movwf	sprintf@val+1
  2044     036C                     l1664:
  2045     036C  3002               	movlw	2
  2046     036D  00C7               	movwf	??_sprintf
  2047     036E  0847               	movf	??_sprintf,w
  2048     036F  07CA               	addwf	sprintf@ap,f
  2049     0370                     l1666:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2052     0370  1FCE               	btfss	sprintf@val+1,7
  2053     0371  2B73               	goto	u981
  2054     0372  2B74               	goto	u980
  2055     0373                     u981:
  2056     0373  2B7D               	goto	l1672
  2057     0374                     u980:
  2058     0374                     l1668:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2061     0374  3003               	movlw	3
  2062     0375  00C7               	movwf	??_sprintf
  2063     0376  0847               	movf	??_sprintf,w
  2064     0377  04CB               	iorwf	sprintf@flag,f
  2065     0378                     l1670:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2068     0378  09CD               	comf	sprintf@val,f
  2069     0379  09CE               	comf	sprintf@val+1,f
  2070     037A  0ACD               	incf	sprintf@val,f
  2071     037B  1903               	skipnz
  2072     037C  0ACE               	incf	sprintf@val+1,f
  2073     037D                     l1672:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2076     037D  01D0               	clrf	sprintf@c
  2077     037E  0AD0               	incf	sprintf@c,f
  2078     037F                     l1678:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2081     037F  0850               	movf	sprintf@c,w
  2082     0380  00C7               	movwf	??_sprintf
  2083     0381  0747               	addwf	??_sprintf,w
  2084     0382  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2085     0383  0084               	movwf	4
  2086     0384  120A  158A  200A  120A  118A  	fcall	stringdir
  2087     0389  00C8               	movwf	??_sprintf+1
  2088     038A  120A  158A  200A  120A  118A  	fcall	stringdir
  2089     038F  00C9               	movwf	??_sprintf+2
  2090     0390  0849               	movf	??_sprintf+2,w
  2091     0391  024E               	subwf	sprintf@val+1,w
  2092     0392  1D03               	skipz
  2093     0393  2B96               	goto	u995
  2094     0394  0848               	movf	??_sprintf+1,w
  2095     0395  024D               	subwf	sprintf@val,w
  2096     0396                     u995:
  2097     0396  1803               	skipnc
  2098     0397  2B99               	goto	u991
  2099     0398  2B9A               	goto	u990
  2100     0399                     u991:
  2101     0399  2B9B               	goto	l1682
  2102     039A                     u990:
  2103     039A  2BA5               	goto	l1684
  2104     039B                     l1682:
  2105     039B  3001               	movlw	1
  2106     039C  00C7               	movwf	??_sprintf
  2107     039D  0847               	movf	??_sprintf,w
  2108     039E  07D0               	addwf	sprintf@c,f
  2109     039F  3005               	movlw	5
  2110     03A0  0650               	xorwf	sprintf@c,w
  2111     03A1  1D03               	btfss	3,2
  2112     03A2  2BA4               	goto	u1001
  2113     03A3  2BA5               	goto	u1000
  2114     03A4                     u1001:
  2115     03A4  2B7F               	goto	l1678
  2116     03A5                     u1000:
  2117     03A5                     l1684:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2120     03A5  084B               	movf	sprintf@flag,w
  2121     03A6  3903               	andlw	3
  2122     03A7  1903               	btfsc	3,2
  2123     03A8  2BAA               	goto	u1011
  2124     03A9  2BAB               	goto	u1010
  2125     03AA                     u1011:
  2126     03AA  2BB4               	goto	l1690
  2127     03AB                     u1010:
  2128     03AB                     l1686:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2131     03AB  084F               	movf	sprintf@sp,w
  2132     03AC  0084               	movwf	4
  2133     03AD  302D               	movlw	45
  2134     03AE  1383               	bcf	3,7	;select IRP bank0
  2135     03AF  0080               	movwf	0
  2136     03B0                     l1688:
  2137     03B0  3001               	movlw	1
  2138     03B1  00C7               	movwf	??_sprintf
  2139     03B2  0847               	movf	??_sprintf,w
  2140     03B3  07CF               	addwf	sprintf@sp,f
  2141     03B4                     l1690:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2144     03B4  0850               	movf	sprintf@c,w
  2145     03B5  00CC               	movwf	sprintf@prec
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2148     03B6  2BEC               	goto	l1698
  2149     03B7                     l1692:
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2152     03B7  300A               	movlw	10
  2153     03B8  00F8               	movwf	___lwmod@divisor
  2154     03B9  3000               	movlw	0
  2155     03BA  00F9               	movwf	___lwmod@divisor+1
  2156     03BB  084C               	movf	sprintf@prec,w
  2157     03BC  00C7               	movwf	??_sprintf
  2158     03BD  0747               	addwf	??_sprintf,w
  2159     03BE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2160     03BF  0084               	movwf	4
  2161     03C0  120A  158A  200A  120A  118A  	fcall	stringdir
  2162     03C5  00F0               	movwf	___lwdiv@divisor
  2163     03C6  120A  158A  200A  120A  118A  	fcall	stringdir
  2164     03CB  00F1               	movwf	___lwdiv@divisor+1
  2165     03CC  084E               	movf	sprintf@val+1,w
  2166     03CD  00F3               	movwf	___lwdiv@dividend+1
  2167     03CE  084D               	movf	sprintf@val,w
  2168     03CF  00F2               	movwf	___lwdiv@dividend
  2169     03D0  120A  118A  212A  120A  118A  	fcall	___lwdiv
  2170     03D5  0871               	movf	?___lwdiv+1,w
  2171     03D6  00FB               	movwf	___lwmod@dividend+1
  2172     03D7  0870               	movf	?___lwdiv,w
  2173     03D8  00FA               	movwf	___lwmod@dividend
  2174     03D9  120A  118A  2070  120A  118A  	fcall	___lwmod
  2175     03DE  0878               	movf	?___lwmod,w
  2176     03DF  3E30               	addlw	48
  2177     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2178     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2179     03E2  00D0               	movwf	sprintf@c
  2180     03E3                     l1694:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2183     03E3  084F               	movf	sprintf@sp,w
  2184     03E4  0084               	movwf	4
  2185     03E5  0850               	movf	sprintf@c,w
  2186     03E6  1383               	bcf	3,7	;select IRP bank0
  2187     03E7  0080               	movwf	0
  2188     03E8                     l1696:
  2189     03E8  3001               	movlw	1
  2190     03E9  00C7               	movwf	??_sprintf
  2191     03EA  0847               	movf	??_sprintf,w
  2192     03EB  07CF               	addwf	sprintf@sp,f
  2193     03EC                     l1698:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2196     03EC  30FF               	movlw	255
  2197     03ED  00C7               	movwf	??_sprintf
  2198     03EE  0847               	movf	??_sprintf,w
  2199     03EF  07CC               	addwf	sprintf@prec,f
  2200     03F0  0A4C               	incf	sprintf@prec,w
  2201     03F1  1D03               	btfss	3,2
  2202     03F2  2BF4               	goto	u1021
  2203     03F3  2BF5               	goto	u1020
  2204     03F4                     u1021:
  2205     03F4  2BB7               	goto	l1692
  2206     03F5                     u1020:
  2207     03F5                     l1700:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2210     03F5  3001               	movlw	1
  2211     03F6  07C4               	addwf	sprintf@f,f
  2212     03F7  30FF               	movlw	-1
  2213     03F8  0744               	addwf	sprintf@f,w
  2214     03F9  0084               	movwf	4
  2215     03FA  120A  158A  200A  120A  118A  	fcall	stringdir
  2216     03FF  00D0               	movwf	sprintf@c
  2217     0400  0850               	movf	sprintf@c,w
  2218     0401  1D03               	btfss	3,2
  2219     0402  2C04               	goto	u1031
  2220     0403  2C05               	goto	u1030
  2221     0404                     u1031:
  2222     0404  2B36               	goto	l1650
  2223     0405                     u1030:
  2224     0405                     l1702:
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2227     0405  084F               	movf	sprintf@sp,w
  2228     0406  0084               	movwf	4
  2229     0407  1383               	bcf	3,7	;select IRP bank0
  2230     0408  0180               	clrf	0
  2231     0409                     l338:
  2232     0409  0008               	return
  2233     040A                     __end_of_sprintf:
  2234                           
  2235                           	psect	text2
  2236     0070                     __ptext2:	
  2237 ;; *************** function ___lwmod *****************
  2238 ;; Defined at:
  2239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  divisor         2    8[COMMON] unsigned int 
  2242 ;;  dividend        2   10[COMMON] unsigned int 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  counter         1   13[COMMON] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  2    8[COMMON] unsigned int 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2254 ;;      Params:         4       0       0       0       0
  2255 ;;      Locals:         1       0       0       0       0
  2256 ;;      Temps:          1       0       0       0       0
  2257 ;;      Totals:         6       0       0       0       0
  2258 ;;Total ram usage:        6 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_sprintf
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267     0070                     ___lwmod:	
  2268                           ;psect for function ___lwmod
  2269                           
  2270     0070                     l1538:	
  2271                           ;incstack = 0
  2272                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2273                           
  2274     0070  0878               	movf	___lwmod@divisor,w
  2275     0071  0479               	iorwf	___lwmod@divisor+1,w
  2276     0072  1903               	btfsc	3,2
  2277     0073  2875               	goto	u841
  2278     0074  2876               	goto	u840
  2279     0075                     u841:
  2280     0075  28A5               	goto	l1556
  2281     0076                     u840:
  2282     0076                     l1540:
  2283     0076  01FD               	clrf	___lwmod@counter
  2284     0077  0AFD               	incf	___lwmod@counter,f
  2285     0078  2884               	goto	l1546
  2286     0079                     l1542:
  2287     0079  3001               	movlw	1
  2288     007A                     u855:
  2289     007A  1003               	clrc
  2290     007B  0DF8               	rlf	___lwmod@divisor,f
  2291     007C  0DF9               	rlf	___lwmod@divisor+1,f
  2292     007D  3EFF               	addlw	-1
  2293     007E  1D03               	skipz
  2294     007F  287A               	goto	u855
  2295     0080                     l1544:
  2296     0080  3001               	movlw	1
  2297     0081  00FC               	movwf	??___lwmod
  2298     0082  087C               	movf	??___lwmod,w
  2299     0083  07FD               	addwf	___lwmod@counter,f
  2300     0084                     l1546:
  2301     0084  1FF9               	btfss	___lwmod@divisor+1,7
  2302     0085  2887               	goto	u861
  2303     0086  2888               	goto	u860
  2304     0087                     u861:
  2305     0087  2879               	goto	l1542
  2306     0088                     u860:
  2307     0088                     l1548:
  2308     0088  0879               	movf	___lwmod@divisor+1,w
  2309     0089  027B               	subwf	___lwmod@dividend+1,w
  2310     008A  1D03               	skipz
  2311     008B  288E               	goto	u875
  2312     008C  0878               	movf	___lwmod@divisor,w
  2313     008D  027A               	subwf	___lwmod@dividend,w
  2314     008E                     u875:
  2315     008E  1C03               	skipc
  2316     008F  2891               	goto	u871
  2317     0090  2892               	goto	u870
  2318     0091                     u871:
  2319     0091  2898               	goto	l1552
  2320     0092                     u870:
  2321     0092                     l1550:
  2322     0092  0878               	movf	___lwmod@divisor,w
  2323     0093  02FA               	subwf	___lwmod@dividend,f
  2324     0094  0879               	movf	___lwmod@divisor+1,w
  2325     0095  1C03               	skipc
  2326     0096  03FB               	decf	___lwmod@dividend+1,f
  2327     0097  02FB               	subwf	___lwmod@dividend+1,f
  2328     0098                     l1552:
  2329     0098  3001               	movlw	1
  2330     0099                     u885:
  2331     0099  1003               	clrc
  2332     009A  0CF9               	rrf	___lwmod@divisor+1,f
  2333     009B  0CF8               	rrf	___lwmod@divisor,f
  2334     009C  3EFF               	addlw	-1
  2335     009D  1D03               	skipz
  2336     009E  2899               	goto	u885
  2337     009F                     l1554:
  2338     009F  3001               	movlw	1
  2339     00A0  02FD               	subwf	___lwmod@counter,f
  2340     00A1  1D03               	btfss	3,2
  2341     00A2  28A4               	goto	u891
  2342     00A3  28A5               	goto	u890
  2343     00A4                     u891:
  2344     00A4  2888               	goto	l1548
  2345     00A5                     u890:
  2346     00A5                     l1556:
  2347     00A5  087B               	movf	___lwmod@dividend+1,w
  2348     00A6  00F9               	movwf	?___lwmod+1
  2349     00A7  087A               	movf	___lwmod@dividend,w
  2350     00A8  00F8               	movwf	?___lwmod
  2351     00A9                     l624:
  2352     00A9  0008               	return
  2353     00AA                     __end_of___lwmod:
  2354                           
  2355                           	psect	text3
  2356     012A                     __ptext3:	
  2357 ;; *************** function ___lwdiv *****************
  2358 ;; Defined at:
  2359 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  divisor         2    0[COMMON] unsigned int 
  2362 ;;  dividend        2    2[COMMON] unsigned int 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  quotient        2    5[COMMON] unsigned int 
  2365 ;;  counter         1    7[COMMON] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  2    0[COMMON] unsigned int 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2375 ;;      Params:         4       0       0       0       0
  2376 ;;      Locals:         3       0       0       0       0
  2377 ;;      Temps:          1       0       0       0       0
  2378 ;;      Totals:         8       0       0       0       0
  2379 ;;Total ram usage:        8 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_sprintf
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388     012A                     ___lwdiv:	
  2389                           ;psect for function ___lwdiv
  2390                           
  2391     012A                     l1512:	
  2392                           ;incstack = 0
  2393                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2394                           
  2395     012A  01F5               	clrf	___lwdiv@quotient
  2396     012B  01F6               	clrf	___lwdiv@quotient+1
  2397     012C                     l1514:
  2398     012C  0870               	movf	___lwdiv@divisor,w
  2399     012D  0471               	iorwf	___lwdiv@divisor+1,w
  2400     012E  1903               	btfsc	3,2
  2401     012F  2931               	goto	u771
  2402     0130  2932               	goto	u770
  2403     0131                     u771:
  2404     0131  2969               	goto	l1534
  2405     0132                     u770:
  2406     0132                     l1516:
  2407     0132  01F7               	clrf	___lwdiv@counter
  2408     0133  0AF7               	incf	___lwdiv@counter,f
  2409     0134  2940               	goto	l1522
  2410     0135                     l1518:
  2411     0135  3001               	movlw	1
  2412     0136                     u785:
  2413     0136  1003               	clrc
  2414     0137  0DF0               	rlf	___lwdiv@divisor,f
  2415     0138  0DF1               	rlf	___lwdiv@divisor+1,f
  2416     0139  3EFF               	addlw	-1
  2417     013A  1D03               	skipz
  2418     013B  2936               	goto	u785
  2419     013C                     l1520:
  2420     013C  3001               	movlw	1
  2421     013D  00F4               	movwf	??___lwdiv
  2422     013E  0874               	movf	??___lwdiv,w
  2423     013F  07F7               	addwf	___lwdiv@counter,f
  2424     0140                     l1522:
  2425     0140  1FF1               	btfss	___lwdiv@divisor+1,7
  2426     0141  2943               	goto	u791
  2427     0142  2944               	goto	u790
  2428     0143                     u791:
  2429     0143  2935               	goto	l1518
  2430     0144                     u790:
  2431     0144                     l1524:
  2432     0144  3001               	movlw	1
  2433     0145                     u805:
  2434     0145  1003               	clrc
  2435     0146  0DF5               	rlf	___lwdiv@quotient,f
  2436     0147  0DF6               	rlf	___lwdiv@quotient+1,f
  2437     0148  3EFF               	addlw	-1
  2438     0149  1D03               	skipz
  2439     014A  2945               	goto	u805
  2440     014B  0871               	movf	___lwdiv@divisor+1,w
  2441     014C  0273               	subwf	___lwdiv@dividend+1,w
  2442     014D  1D03               	skipz
  2443     014E  2951               	goto	u815
  2444     014F  0870               	movf	___lwdiv@divisor,w
  2445     0150  0272               	subwf	___lwdiv@dividend,w
  2446     0151                     u815:
  2447     0151  1C03               	skipc
  2448     0152  2954               	goto	u811
  2449     0153  2955               	goto	u810
  2450     0154                     u811:
  2451     0154  295C               	goto	l1530
  2452     0155                     u810:
  2453     0155                     l1526:
  2454     0155  0870               	movf	___lwdiv@divisor,w
  2455     0156  02F2               	subwf	___lwdiv@dividend,f
  2456     0157  0871               	movf	___lwdiv@divisor+1,w
  2457     0158  1C03               	skipc
  2458     0159  03F3               	decf	___lwdiv@dividend+1,f
  2459     015A  02F3               	subwf	___lwdiv@dividend+1,f
  2460     015B                     l1528:
  2461     015B  1475               	bsf	___lwdiv@quotient,0
  2462     015C                     l1530:
  2463     015C  3001               	movlw	1
  2464     015D                     u825:
  2465     015D  1003               	clrc
  2466     015E  0CF1               	rrf	___lwdiv@divisor+1,f
  2467     015F  0CF0               	rrf	___lwdiv@divisor,f
  2468     0160  3EFF               	addlw	-1
  2469     0161  1D03               	skipz
  2470     0162  295D               	goto	u825
  2471     0163                     l1532:
  2472     0163  3001               	movlw	1
  2473     0164  02F7               	subwf	___lwdiv@counter,f
  2474     0165  1D03               	btfss	3,2
  2475     0166  2968               	goto	u831
  2476     0167  2969               	goto	u830
  2477     0168                     u831:
  2478     0168  2944               	goto	l1524
  2479     0169                     u830:
  2480     0169                     l1534:
  2481     0169  0876               	movf	___lwdiv@quotient+1,w
  2482     016A  00F1               	movwf	?___lwdiv+1
  2483     016B  0875               	movf	___lwdiv@quotient,w
  2484     016C  00F0               	movwf	?___lwdiv
  2485     016D                     l614:
  2486     016D  0008               	return
  2487     016E                     __end_of___lwdiv:
  2488                           
  2489                           	psect	text4
  2490     0FDC                     __ptext4:	
  2491 ;; *************** function _setup *****************
  2492 ;; Defined at:
  2493 ;;		line 57 in file "Principal.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, pclath, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2507 ;;      Params:         0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 2
  2514 ;; This function calls:
  2515 ;;		_I2C_Master_Init
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521     0FDC                     _setup:	
  2522                           ;psect for function _setup
  2523                           
  2524     0FDC                     l1560:	
  2525                           ;incstack = 0
  2526                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2527                           
  2528                           
  2529                           ;Principal.c: 59:     OSCCON = 0B01110001;
  2530     0FDC  3071               	movlw	113
  2531     0FDD  1683               	bsf	3,5	;RP0=1, select bank1
  2532     0FDE  1303               	bcf	3,6	;RP1=0, select bank1
  2533     0FDF  008F               	movwf	15	;volatile
  2534     0FE0                     l1562:
  2535                           
  2536                           ;Principal.c: 62:     I2C_Master_Init(100000);
  2537     0FE0  3000               	movlw	0
  2538     0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  2539     0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  2540     0FE3  00C7               	movwf	I2C_Master_Init@c+3
  2541     0FE4  3001               	movlw	1
  2542     0FE5  00C6               	movwf	I2C_Master_Init@c+2
  2543     0FE6  3086               	movlw	134
  2544     0FE7  00C5               	movwf	I2C_Master_Init@c+1
  2545     0FE8  30A0               	movlw	160
  2546     0FE9  00C4               	movwf	I2C_Master_Init@c
  2547     0FEA  120A  118A  2038  120A  158A  	fcall	_I2C_Master_Init
  2548     0FEF                     l1564:
  2549                           
  2550                           ;Principal.c: 65:     ANSEL = 0;
  2551     0FEF  1683               	bsf	3,5	;RP0=1, select bank3
  2552     0FF0  1703               	bsf	3,6	;RP1=1, select bank3
  2553     0FF1  0188               	clrf	8	;volatile
  2554     0FF2                     l1566:
  2555                           
  2556                           ;Principal.c: 66:     ANSELH = 0;
  2557     0FF2  0189               	clrf	9	;volatile
  2558     0FF3                     l1568:
  2559                           
  2560                           ;Principal.c: 67:     TRISA = 0;
  2561     0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  2562     0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  2563     0FF5  0185               	clrf	5	;volatile
  2564     0FF6                     l1570:
  2565                           
  2566                           ;Principal.c: 68:     TRISB = 0;
  2567     0FF6  0186               	clrf	6	;volatile
  2568     0FF7                     l1572:
  2569                           
  2570                           ;Principal.c: 69:     TRISD = 0;
  2571     0FF7  0188               	clrf	8	;volatile
  2572     0FF8                     l1574:
  2573                           
  2574                           ;Principal.c: 70:     TRISE = 0;
  2575     0FF8  0189               	clrf	9	;volatile
  2576     0FF9                     l1576:
  2577                           
  2578                           ;Principal.c: 73:     PORTA = 0;
  2579     0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  2580     0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  2581     0FFB  0185               	clrf	5	;volatile
  2582     0FFC                     l1578:
  2583                           
  2584                           ;Principal.c: 74:     PORTB = 0;
  2585     0FFC  0186               	clrf	6	;volatile
  2586     0FFD                     l1580:
  2587                           
  2588                           ;Principal.c: 75:     PORTD = 0;
  2589     0FFD  0188               	clrf	8	;volatile
  2590     0FFE                     l1582:
  2591                           
  2592                           ;Principal.c: 76:     PORTE = 0;
  2593     0FFE  0189               	clrf	9	;volatile
  2594     0FFF                     l85:
  2595     0FFF  0008               	return
  2596     1000                     __end_of_setup:
  2597                           
  2598                           	psect	text5
  2599     0038                     __ptext5:	
  2600 ;; *************** function _I2C_Master_Init *****************
  2601 ;; Defined at:
  2602 ;;		line 16 in file "I2C.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  c               4    0[BANK0 ] const unsigned long 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0, pclath, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2616 ;;      Params:         0       4       0       0       0
  2617 ;;      Locals:         0       0       0       0       0
  2618 ;;      Temps:          0       4       0       0       0
  2619 ;;      Totals:         0       8       0       0       0
  2620 ;;Total ram usage:        8 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 1
  2623 ;; This function calls:
  2624 ;;		___lldiv
  2625 ;; This function is called by:
  2626 ;;		_setup
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630     0038                     _I2C_Master_Init:	
  2631                           ;psect for function _I2C_Master_Init
  2632                           
  2633     0038                     l1442:	
  2634                           ;incstack = 0
  2635                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2636                           
  2637                           
  2638                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2639     0038  3028               	movlw	40
  2640     0039  1283               	bcf	3,5	;RP0=0, select bank0
  2641     003A  1303               	bcf	3,6	;RP1=0, select bank0
  2642     003B  0094               	movwf	20	;volatile
  2643     003C                     l1444:
  2644                           
  2645                           ;I2C.c: 19:     SSPCON2 = 0;
  2646     003C  1683               	bsf	3,5	;RP0=1, select bank1
  2647     003D  1303               	bcf	3,6	;RP1=0, select bank1
  2648     003E  0191               	clrf	17	;volatile
  2649     003F                     l1446:
  2650                           
  2651                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2652     003F  1283               	bcf	3,5	;RP0=0, select bank0
  2653     0040  1303               	bcf	3,6	;RP1=0, select bank0
  2654     0041  0844               	movf	I2C_Master_Init@c,w
  2655     0042  00C8               	movwf	??_I2C_Master_Init
  2656     0043  0845               	movf	I2C_Master_Init@c+1,w
  2657     0044  00C9               	movwf	??_I2C_Master_Init+1
  2658     0045  0846               	movf	I2C_Master_Init@c+2,w
  2659     0046  00CA               	movwf	??_I2C_Master_Init+2
  2660     0047  0847               	movf	I2C_Master_Init@c+3,w
  2661     0048  00CB               	movwf	??_I2C_Master_Init+3
  2662     0049  3002               	movlw	2
  2663     004A                     u735:
  2664     004A  1003               	clrc
  2665     004B  0DC8               	rlf	??_I2C_Master_Init,f
  2666     004C  0DC9               	rlf	??_I2C_Master_Init+1,f
  2667     004D  0DCA               	rlf	??_I2C_Master_Init+2,f
  2668     004E  0DCB               	rlf	??_I2C_Master_Init+3,f
  2669     004F                     u730:
  2670     004F  3EFF               	addlw	-1
  2671     0050  1D03               	skipz
  2672     0051  284A               	goto	u735
  2673     0052  084B               	movf	??_I2C_Master_Init+3,w
  2674     0053  00F3               	movwf	___lldiv@divisor+3
  2675     0054  084A               	movf	??_I2C_Master_Init+2,w
  2676     0055  00F2               	movwf	___lldiv@divisor+2
  2677     0056  0849               	movf	??_I2C_Master_Init+1,w
  2678     0057  00F1               	movwf	___lldiv@divisor+1
  2679     0058  0848               	movf	??_I2C_Master_Init,w
  2680     0059  00F0               	movwf	___lldiv@divisor
  2681     005A  3000               	movlw	0
  2682     005B  00F7               	movwf	___lldiv@dividend+3
  2683     005C  307A               	movlw	122
  2684     005D  00F6               	movwf	___lldiv@dividend+2
  2685     005E  3012               	movlw	18
  2686     005F  00F5               	movwf	___lldiv@dividend+1
  2687     0060  3000               	movlw	0
  2688     0061  00F4               	movwf	___lldiv@dividend
  2689     0062  120A  118A  21B9  120A  118A  	fcall	___lldiv
  2690     0067  0870               	movf	?___lldiv,w
  2691     0068  3EFF               	addlw	255
  2692     0069  1683               	bsf	3,5	;RP0=1, select bank1
  2693     006A  1303               	bcf	3,6	;RP1=0, select bank1
  2694     006B  0093               	movwf	19	;volatile
  2695     006C                     l1448:
  2696                           
  2697                           ;I2C.c: 21:     SSPSTAT = 0;
  2698     006C  0194               	clrf	20	;volatile
  2699     006D                     l1450:
  2700                           
  2701                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2702     006D  1587               	bsf	7,3	;volatile
  2703     006E                     l1452:
  2704                           
  2705                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2706     006E  1607               	bsf	7,4	;volatile
  2707     006F                     l147:
  2708     006F  0008               	return
  2709     0070                     __end_of_I2C_Master_Init:
  2710                           
  2711                           	psect	text6
  2712     01B9                     __ptext6:	
  2713 ;; *************** function ___lldiv *****************
  2714 ;; Defined at:
  2715 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  divisor         4    0[COMMON] unsigned long 
  2718 ;;  dividend        4    4[COMMON] unsigned long 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  quotient        4    9[COMMON] unsigned long 
  2721 ;;  counter         1   13[COMMON] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  4    0[COMMON] unsigned long 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         8       0       0       0       0
  2732 ;;      Locals:         5       0       0       0       0
  2733 ;;      Temps:          1       0       0       0       0
  2734 ;;      Totals:        14       0       0       0       0
  2735 ;;Total ram usage:       14 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_I2C_Master_Init
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744     01B9                     ___lldiv:	
  2745                           ;psect for function ___lldiv
  2746                           
  2747     01B9                     l1418:	
  2748                           ;incstack = 0
  2749                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2750                           
  2751     01B9  3000               	movlw	0
  2752     01BA  00FC               	movwf	___lldiv@quotient+3
  2753     01BB  3000               	movlw	0
  2754     01BC  00FB               	movwf	___lldiv@quotient+2
  2755     01BD  3000               	movlw	0
  2756     01BE  00FA               	movwf	___lldiv@quotient+1
  2757     01BF  3000               	movlw	0
  2758     01C0  00F9               	movwf	___lldiv@quotient
  2759     01C1  0873               	movf	___lldiv@divisor+3,w
  2760     01C2  0472               	iorwf	___lldiv@divisor+2,w
  2761     01C3  0471               	iorwf	___lldiv@divisor+1,w
  2762     01C4  0470               	iorwf	___lldiv@divisor,w
  2763     01C5  1903               	skipnz
  2764     01C6  29C8               	goto	u661
  2765     01C7  29C9               	goto	u660
  2766     01C8                     u661:
  2767     01C8  2A16               	goto	l1438
  2768     01C9                     u660:
  2769     01C9                     l1420:
  2770     01C9  01FD               	clrf	___lldiv@counter
  2771     01CA  0AFD               	incf	___lldiv@counter,f
  2772     01CB  29D9               	goto	l1424
  2773     01CC                     l1422:
  2774     01CC  3001               	movlw	1
  2775     01CD  00F8               	movwf	??___lldiv
  2776     01CE                     u675:
  2777     01CE  1003               	clrc
  2778     01CF  0DF0               	rlf	___lldiv@divisor,f
  2779     01D0  0DF1               	rlf	___lldiv@divisor+1,f
  2780     01D1  0DF2               	rlf	___lldiv@divisor+2,f
  2781     01D2  0DF3               	rlf	___lldiv@divisor+3,f
  2782     01D3  0BF8               	decfsz	??___lldiv,f
  2783     01D4  29CE               	goto	u675
  2784     01D5  3001               	movlw	1
  2785     01D6  00F8               	movwf	??___lldiv
  2786     01D7  0878               	movf	??___lldiv,w
  2787     01D8  07FD               	addwf	___lldiv@counter,f
  2788     01D9                     l1424:
  2789     01D9  1FF3               	btfss	___lldiv@divisor+3,7
  2790     01DA  29DC               	goto	u681
  2791     01DB  29DD               	goto	u680
  2792     01DC                     u681:
  2793     01DC  29CC               	goto	l1422
  2794     01DD                     u680:
  2795     01DD                     l1426:
  2796     01DD  3001               	movlw	1
  2797     01DE  00F8               	movwf	??___lldiv
  2798     01DF                     u695:
  2799     01DF  1003               	clrc
  2800     01E0  0DF9               	rlf	___lldiv@quotient,f
  2801     01E1  0DFA               	rlf	___lldiv@quotient+1,f
  2802     01E2  0DFB               	rlf	___lldiv@quotient+2,f
  2803     01E3  0DFC               	rlf	___lldiv@quotient+3,f
  2804     01E4  0BF8               	decfsz	??___lldiv,f
  2805     01E5  29DF               	goto	u695
  2806     01E6                     l1428:
  2807     01E6  0873               	movf	___lldiv@divisor+3,w
  2808     01E7  0277               	subwf	___lldiv@dividend+3,w
  2809     01E8  1D03               	skipz
  2810     01E9  29F4               	goto	u705
  2811     01EA  0872               	movf	___lldiv@divisor+2,w
  2812     01EB  0276               	subwf	___lldiv@dividend+2,w
  2813     01EC  1D03               	skipz
  2814     01ED  29F4               	goto	u705
  2815     01EE  0871               	movf	___lldiv@divisor+1,w
  2816     01EF  0275               	subwf	___lldiv@dividend+1,w
  2817     01F0  1D03               	skipz
  2818     01F1  29F4               	goto	u705
  2819     01F2  0870               	movf	___lldiv@divisor,w
  2820     01F3  0274               	subwf	___lldiv@dividend,w
  2821     01F4                     u705:
  2822     01F4  1C03               	skipc
  2823     01F5  29F7               	goto	u701
  2824     01F6  29F8               	goto	u700
  2825     01F7                     u701:
  2826     01F7  2A07               	goto	l1434
  2827     01F8                     u700:
  2828     01F8                     l1430:
  2829     01F8  0870               	movf	___lldiv@divisor,w
  2830     01F9  02F4               	subwf	___lldiv@dividend,f
  2831     01FA  0871               	movf	___lldiv@divisor+1,w
  2832     01FB  1C03               	skipc
  2833     01FC  0F71               	incfsz	___lldiv@divisor+1,w
  2834     01FD  02F5               	subwf	___lldiv@dividend+1,f
  2835     01FE  0872               	movf	___lldiv@divisor+2,w
  2836     01FF  1C03               	skipc
  2837     0200  0F72               	incfsz	___lldiv@divisor+2,w
  2838     0201  02F6               	subwf	___lldiv@dividend+2,f
  2839     0202  0873               	movf	___lldiv@divisor+3,w
  2840     0203  1C03               	skipc
  2841     0204  0F73               	incfsz	___lldiv@divisor+3,w
  2842     0205  02F7               	subwf	___lldiv@dividend+3,f
  2843     0206                     l1432:
  2844     0206  1479               	bsf	___lldiv@quotient,0
  2845     0207                     l1434:
  2846     0207  3001               	movlw	1
  2847     0208                     u715:
  2848     0208  1003               	clrc
  2849     0209  0CF3               	rrf	___lldiv@divisor+3,f
  2850     020A  0CF2               	rrf	___lldiv@divisor+2,f
  2851     020B  0CF1               	rrf	___lldiv@divisor+1,f
  2852     020C  0CF0               	rrf	___lldiv@divisor,f
  2853     020D  3EFF               	addlw	-1
  2854     020E  1D03               	skipz
  2855     020F  2A08               	goto	u715
  2856     0210                     l1436:
  2857     0210  3001               	movlw	1
  2858     0211  02FD               	subwf	___lldiv@counter,f
  2859     0212  1D03               	btfss	3,2
  2860     0213  2A15               	goto	u721
  2861     0214  2A16               	goto	u720
  2862     0215                     u721:
  2863     0215  29DD               	goto	l1426
  2864     0216                     u720:
  2865     0216                     l1438:
  2866     0216  087C               	movf	___lldiv@quotient+3,w
  2867     0217  00F3               	movwf	?___lldiv+3
  2868     0218  087B               	movf	___lldiv@quotient+2,w
  2869     0219  00F2               	movwf	?___lldiv+2
  2870     021A  087A               	movf	___lldiv@quotient+1,w
  2871     021B  00F1               	movwf	?___lldiv+1
  2872     021C  0879               	movf	___lldiv@quotient,w
  2873     021D  00F0               	movwf	?___lldiv
  2874     021E                     l378:
  2875     021E  0008               	return
  2876     021F                     __end_of___lldiv:
  2877                           
  2878                           	psect	text7
  2879     021F                     __ptext7:	
  2880 ;; *************** function _Set_Time_RTC *****************
  2881 ;; Defined at:
  2882 ;;		line 246 in file "Principal.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  hour            1    wreg     unsigned char 
  2885 ;;  min             1    4[COMMON] unsigned char 
  2886 ;;  sec             1    5[COMMON] unsigned char 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  hour            1    8[COMMON] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0, pclath, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         2       0       0       0       0
  2899 ;;      Locals:         1       0       0       0       0
  2900 ;;      Temps:          2       0       0       0       0
  2901 ;;      Totals:         5       0       0       0       0
  2902 ;;Total ram usage:        5 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 2
  2905 ;; This function calls:
  2906 ;;		_Dec_to_Bcd
  2907 ;;		_I2C_Master_Start
  2908 ;;		_I2C_Master_Stop
  2909 ;;		_I2C_Master_Write
  2910 ;; This function is called by:
  2911 ;;		_main
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915     021F                     _Set_Time_RTC:	
  2916                           ;psect for function _Set_Time_RTC
  2917                           
  2918                           
  2919                           ;incstack = 0
  2920                           ; Regs used in _Set_Time_RTC: [wreg+status,2+status,0+pclath+cstack]
  2921                           ;Set_Time_RTC@hour stored from wreg
  2922     021F  00F8               	movwf	Set_Time_RTC@hour
  2923     0220                     l1586:
  2924                           
  2925                           ;Principal.c: 248:     I2C_Master_Start();
  2926     0220  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  2927                           
  2928                           ;Principal.c: 249:     I2C_Master_Write(0xD0);
  2929     0225  30D0               	movlw	208
  2930     0226  00F2               	movwf	I2C_Master_Write@d
  2931     0227  3000               	movlw	0
  2932     0228  00F3               	movwf	I2C_Master_Write@d+1
  2933     0229  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  2934                           
  2935                           ;Principal.c: 250:     I2C_Master_Write(0x00);
  2936     022E  3000               	movlw	0
  2937     022F  00F2               	movwf	I2C_Master_Write@d
  2938     0230  00F3               	movwf	I2C_Master_Write@d+1
  2939     0231  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  2940                           
  2941                           ;Principal.c: 251:     I2C_Master_Write(Dec_to_Bcd(sec));
  2942     0236  0875               	movf	Set_Time_RTC@sec,w
  2943     0237  120A  158A  274B  120A  118A  	fcall	_Dec_to_Bcd
  2944     023C  00F6               	movwf	??_Set_Time_RTC
  2945     023D  01F7               	clrf	??_Set_Time_RTC+1
  2946     023E  0876               	movf	??_Set_Time_RTC,w
  2947     023F  00F2               	movwf	I2C_Master_Write@d
  2948     0240  0877               	movf	??_Set_Time_RTC+1,w
  2949     0241  00F3               	movwf	I2C_Master_Write@d+1
  2950     0242  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  2951                           
  2952                           ;Principal.c: 252:     I2C_Master_Stop();
  2953     0247  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  2954                           
  2955                           ;Principal.c: 254:     I2C_Master_Start();
  2956     024C  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  2957                           
  2958                           ;Principal.c: 255:     I2C_Master_Write(0xD0);
  2959     0251  30D0               	movlw	208
  2960     0252  00F2               	movwf	I2C_Master_Write@d
  2961     0253  3000               	movlw	0
  2962     0254  00F3               	movwf	I2C_Master_Write@d+1
  2963     0255  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  2964                           
  2965                           ;Principal.c: 256:     I2C_Master_Write(0x01);
  2966     025A  3001               	movlw	1
  2967     025B  00F2               	movwf	I2C_Master_Write@d
  2968     025C  3000               	movlw	0
  2969     025D  00F3               	movwf	I2C_Master_Write@d+1
  2970     025E  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  2971                           
  2972                           ;Principal.c: 257:     I2C_Master_Write(Dec_to_Bcd(min));
  2973     0263  0874               	movf	Set_Time_RTC@min,w
  2974     0264  120A  158A  274B  120A  118A  	fcall	_Dec_to_Bcd
  2975     0269  00F6               	movwf	??_Set_Time_RTC
  2976     026A  01F7               	clrf	??_Set_Time_RTC+1
  2977     026B  0876               	movf	??_Set_Time_RTC,w
  2978     026C  00F2               	movwf	I2C_Master_Write@d
  2979     026D  0877               	movf	??_Set_Time_RTC+1,w
  2980     026E  00F3               	movwf	I2C_Master_Write@d+1
  2981     026F  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  2982                           
  2983                           ;Principal.c: 258:     I2C_Master_Stop();
  2984     0274  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  2985                           
  2986                           ;Principal.c: 260:     I2C_Master_Start();
  2987     0279  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  2988                           
  2989                           ;Principal.c: 261:     I2C_Master_Write(0xD0);
  2990     027E  30D0               	movlw	208
  2991     027F  00F2               	movwf	I2C_Master_Write@d
  2992     0280  3000               	movlw	0
  2993     0281  00F3               	movwf	I2C_Master_Write@d+1
  2994     0282  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  2995                           
  2996                           ;Principal.c: 262:     I2C_Master_Write(0x02);
  2997     0287  3002               	movlw	2
  2998     0288  00F2               	movwf	I2C_Master_Write@d
  2999     0289  3000               	movlw	0
  3000     028A  00F3               	movwf	I2C_Master_Write@d+1
  3001     028B  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3002                           
  3003                           ;Principal.c: 263:     I2C_Master_Write(Dec_to_Bcd(hour));
  3004     0290  0878               	movf	Set_Time_RTC@hour,w
  3005     0291  120A  158A  274B  120A  118A  	fcall	_Dec_to_Bcd
  3006     0296  00F6               	movwf	??_Set_Time_RTC
  3007     0297  01F7               	clrf	??_Set_Time_RTC+1
  3008     0298  0876               	movf	??_Set_Time_RTC,w
  3009     0299  00F2               	movwf	I2C_Master_Write@d
  3010     029A  0877               	movf	??_Set_Time_RTC+1,w
  3011     029B  00F3               	movwf	I2C_Master_Write@d+1
  3012     029C  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3013                           
  3014                           ;Principal.c: 264:     I2C_Master_Stop();
  3015     02A1  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  3016     02A6                     l115:
  3017     02A6  0008               	return
  3018     02A7                     __end_of_Set_Time_RTC:
  3019                           
  3020                           	psect	text8
  3021     02A7                     __ptext8:	
  3022 ;; *************** function _Set_Date_RTC *****************
  3023 ;; Defined at:
  3024 ;;		line 267 in file "Principal.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  day             1    wreg     unsigned char 
  3027 ;;  mon             1    4[COMMON] unsigned char 
  3028 ;;  year            1    5[COMMON] unsigned char 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  day             1    8[COMMON] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         2       0       0       0       0
  3041 ;;      Locals:         1       0       0       0       0
  3042 ;;      Temps:          2       0       0       0       0
  3043 ;;      Totals:         5       0       0       0       0
  3044 ;;Total ram usage:        5 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 2
  3047 ;; This function calls:
  3048 ;;		_Dec_to_Bcd
  3049 ;;		_I2C_Master_Start
  3050 ;;		_I2C_Master_Stop
  3051 ;;		_I2C_Master_Write
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057     02A7                     _Set_Date_RTC:	
  3058                           ;psect for function _Set_Date_RTC
  3059                           
  3060                           
  3061                           ;incstack = 0
  3062                           ; Regs used in _Set_Date_RTC: [wreg+status,2+status,0+pclath+cstack]
  3063                           ;Set_Date_RTC@day stored from wreg
  3064     02A7  00F8               	movwf	Set_Date_RTC@day
  3065     02A8                     l1588:
  3066                           
  3067                           ;Principal.c: 269:     I2C_Master_Start();
  3068     02A8  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  3069                           
  3070                           ;Principal.c: 270:     I2C_Master_Write(0xD0);
  3071     02AD  30D0               	movlw	208
  3072     02AE  00F2               	movwf	I2C_Master_Write@d
  3073     02AF  3000               	movlw	0
  3074     02B0  00F3               	movwf	I2C_Master_Write@d+1
  3075     02B1  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3076                           
  3077                           ;Principal.c: 271:     I2C_Master_Write(0x04);
  3078     02B6  3004               	movlw	4
  3079     02B7  00F2               	movwf	I2C_Master_Write@d
  3080     02B8  3000               	movlw	0
  3081     02B9  00F3               	movwf	I2C_Master_Write@d+1
  3082     02BA  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3083                           
  3084                           ;Principal.c: 272:     I2C_Master_Write(Dec_to_Bcd(day));
  3085     02BF  0878               	movf	Set_Date_RTC@day,w
  3086     02C0  120A  158A  274B  120A  118A  	fcall	_Dec_to_Bcd
  3087     02C5  00F6               	movwf	??_Set_Date_RTC
  3088     02C6  01F7               	clrf	??_Set_Date_RTC+1
  3089     02C7  0876               	movf	??_Set_Date_RTC,w
  3090     02C8  00F2               	movwf	I2C_Master_Write@d
  3091     02C9  0877               	movf	??_Set_Date_RTC+1,w
  3092     02CA  00F3               	movwf	I2C_Master_Write@d+1
  3093     02CB  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3094                           
  3095                           ;Principal.c: 273:     I2C_Master_Stop();
  3096     02D0  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  3097                           
  3098                           ;Principal.c: 275:     I2C_Master_Start();
  3099     02D5  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  3100                           
  3101                           ;Principal.c: 276:     I2C_Master_Write(0xD0);
  3102     02DA  30D0               	movlw	208
  3103     02DB  00F2               	movwf	I2C_Master_Write@d
  3104     02DC  3000               	movlw	0
  3105     02DD  00F3               	movwf	I2C_Master_Write@d+1
  3106     02DE  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3107                           
  3108                           ;Principal.c: 277:     I2C_Master_Write(0x05);
  3109     02E3  3005               	movlw	5
  3110     02E4  00F2               	movwf	I2C_Master_Write@d
  3111     02E5  3000               	movlw	0
  3112     02E6  00F3               	movwf	I2C_Master_Write@d+1
  3113     02E7  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3114                           
  3115                           ;Principal.c: 278:     I2C_Master_Write(Dec_to_Bcd(mon));
  3116     02EC  0874               	movf	Set_Date_RTC@mon,w
  3117     02ED  120A  158A  274B  120A  118A  	fcall	_Dec_to_Bcd
  3118     02F2  00F6               	movwf	??_Set_Date_RTC
  3119     02F3  01F7               	clrf	??_Set_Date_RTC+1
  3120     02F4  0876               	movf	??_Set_Date_RTC,w
  3121     02F5  00F2               	movwf	I2C_Master_Write@d
  3122     02F6  0877               	movf	??_Set_Date_RTC+1,w
  3123     02F7  00F3               	movwf	I2C_Master_Write@d+1
  3124     02F8  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3125                           
  3126                           ;Principal.c: 279:     I2C_Master_Stop();
  3127     02FD  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  3128                           
  3129                           ;Principal.c: 281:     I2C_Master_Start();
  3130     0302  120A  158A  2722  120A  118A  	fcall	_I2C_Master_Start
  3131                           
  3132                           ;Principal.c: 282:     I2C_Master_Write(0xD0);
  3133     0307  30D0               	movlw	208
  3134     0308  00F2               	movwf	I2C_Master_Write@d
  3135     0309  3000               	movlw	0
  3136     030A  00F3               	movwf	I2C_Master_Write@d+1
  3137     030B  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3138                           
  3139                           ;Principal.c: 283:     I2C_Master_Write(0x06);
  3140     0310  3006               	movlw	6
  3141     0311  00F2               	movwf	I2C_Master_Write@d
  3142     0312  3000               	movlw	0
  3143     0313  00F3               	movwf	I2C_Master_Write@d+1
  3144     0314  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3145                           
  3146                           ;Principal.c: 284:     I2C_Master_Write(Dec_to_Bcd(year));
  3147     0319  0875               	movf	Set_Date_RTC@year,w
  3148     031A  120A  158A  274B  120A  118A  	fcall	_Dec_to_Bcd
  3149     031F  00F6               	movwf	??_Set_Date_RTC
  3150     0320  01F7               	clrf	??_Set_Date_RTC+1
  3151     0321  0876               	movf	??_Set_Date_RTC,w
  3152     0322  00F2               	movwf	I2C_Master_Write@d
  3153     0323  0877               	movf	??_Set_Date_RTC+1,w
  3154     0324  00F3               	movwf	I2C_Master_Write@d+1
  3155     0325  120A  158A  2734  120A  118A  	fcall	_I2C_Master_Write
  3156                           
  3157                           ;Principal.c: 285:     I2C_Master_Stop();
  3158     032A  120A  158A  272B  120A  118A  	fcall	_I2C_Master_Stop
  3159     032F                     l118:
  3160     032F  0008               	return
  3161     0330                     __end_of_Set_Date_RTC:
  3162                           
  3163                           	psect	text9
  3164     0F34                     __ptext9:	
  3165 ;; *************** function _I2C_Master_Write *****************
  3166 ;; Defined at:
  3167 ;;		line 65 in file "I2C.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  d               2    2[COMMON] unsigned int 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, pclath, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3181 ;;      Params:         2       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0
  3184 ;;      Totals:         2       0       0       0       0
  3185 ;;Total ram usage:        2 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 1
  3188 ;; This function calls:
  3189 ;;		_I2C_Master_Wait
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;;		_Set_Time_RTC
  3193 ;;		_Set_Date_RTC
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197     0F34                     _I2C_Master_Write:	
  3198                           ;psect for function _I2C_Master_Write
  3199                           
  3200     0F34                     l1458:	
  3201                           ;incstack = 0
  3202                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3203                           
  3204                           
  3205                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3206     0F34  120A  158A  273E  120A  158A  	fcall	_I2C_Master_Wait
  3207     0F39                     l1460:
  3208                           
  3209                           ;I2C.c: 68:     SSPBUF = d;
  3210     0F39  0872               	movf	I2C_Master_Write@d,w
  3211     0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  3212     0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  3213     0F3C  0093               	movwf	19	;volatile
  3214     0F3D                     l165:
  3215     0F3D  0008               	return
  3216     0F3E                     __end_of_I2C_Master_Write:
  3217                           
  3218                           	psect	text10
  3219     0F2B                     __ptext10:	
  3220 ;; *************** function _I2C_Master_Stop *****************
  3221 ;; Defined at:
  3222 ;;		line 55 in file "I2C.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0
  3239 ;;      Totals:         0       0       0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 1
  3243 ;; This function calls:
  3244 ;;		_I2C_Master_Wait
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;;		_Set_Time_RTC
  3248 ;;		_Set_Date_RTC
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252     0F2B                     _I2C_Master_Stop:	
  3253                           ;psect for function _I2C_Master_Stop
  3254                           
  3255     0F2B                     l1462:	
  3256                           ;incstack = 0
  3257                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3258                           
  3259                           
  3260                           ;I2C.c: 57:     I2C_Master_Wait();
  3261     0F2B  120A  158A  273E  120A  158A  	fcall	_I2C_Master_Wait
  3262     0F30                     l1464:
  3263                           
  3264                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3265     0F30  1683               	bsf	3,5	;RP0=1, select bank1
  3266     0F31  1303               	bcf	3,6	;RP1=0, select bank1
  3267     0F32  1511               	bsf	17,2	;volatile
  3268     0F33                     l162:
  3269     0F33  0008               	return
  3270     0F34                     __end_of_I2C_Master_Stop:
  3271                           
  3272                           	psect	text11
  3273     0F22                     __ptext11:	
  3274 ;; *************** function _I2C_Master_Start *****************
  3275 ;; Defined at:
  3276 ;;		line 39 in file "I2C.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, pclath, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0
  3293 ;;      Totals:         0       0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 1
  3297 ;; This function calls:
  3298 ;;		_I2C_Master_Wait
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;;		_Set_Time_RTC
  3302 ;;		_Set_Date_RTC
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306     0F22                     _I2C_Master_Start:	
  3307                           ;psect for function _I2C_Master_Start
  3308                           
  3309     0F22                     l1454:	
  3310                           ;incstack = 0
  3311                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3312                           
  3313                           
  3314                           ;I2C.c: 41:     I2C_Master_Wait();
  3315     0F22  120A  158A  273E  120A  158A  	fcall	_I2C_Master_Wait
  3316     0F27                     l1456:
  3317                           
  3318                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3319     0F27  1683               	bsf	3,5	;RP0=1, select bank1
  3320     0F28  1303               	bcf	3,6	;RP1=0, select bank1
  3321     0F29  1411               	bsf	17,0	;volatile
  3322     0F2A                     l156:
  3323     0F2A  0008               	return
  3324     0F2B                     __end_of_I2C_Master_Start:
  3325                           
  3326                           	psect	text12
  3327     0F4B                     __ptext12:	
  3328 ;; *************** function _Dec_to_Bcd *****************
  3329 ;; Defined at:
  3330 ;;		line 230 in file "Principal.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  dec_number      1    wreg     unsigned char 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  dec_number      1    0[COMMON] unsigned char 
  3335 ;;  bcd_number      1    1[COMMON] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      unsigned char 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3345 ;;      Params:         0       0       0       0       0
  3346 ;;      Locals:         2       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0
  3348 ;;      Totals:         2       0       0       0       0
  3349 ;;Total ram usage:        2 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_Set_Time_RTC
  3355 ;;		_Set_Date_RTC
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359     0F4B                     _Dec_to_Bcd:	
  3360                           ;psect for function _Dec_to_Bcd
  3361                           
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in _Dec_to_Bcd: [wreg+status,2+status,0]
  3365                           ;Dec_to_Bcd@dec_number stored from wreg
  3366     0F4B  00F0               	movwf	Dec_to_Bcd@dec_number
  3367     0F4C                     l1476:
  3368                           
  3369                           ;Principal.c: 231:     uint8_t bcd_number;;Principal.c: 232:     bcd_number = 0;
  3370     0F4C  01F1               	clrf	Dec_to_Bcd@bcd_number
  3371     0F4D                     l1478:
  3372                           
  3373                           ;Principal.c: 234:         if (dec_number >= 10){
  3374     0F4D  300A               	movlw	10
  3375     0F4E  0270               	subwf	Dec_to_Bcd@dec_number,w
  3376     0F4F  1C03               	skipc
  3377     0F50  2F52               	goto	u741
  3378     0F51  2F53               	goto	u740
  3379     0F52                     u741:
  3380     0F52  2F5A               	goto	l1482
  3381     0F53                     u740:
  3382     0F53                     l1480:
  3383                           
  3384                           ;Principal.c: 235:             dec_number = dec_number - 10;
  3385     0F53  0870               	movf	Dec_to_Bcd@dec_number,w
  3386     0F54  3EF6               	addlw	246
  3387     0F55  00F0               	movwf	Dec_to_Bcd@dec_number
  3388                           
  3389                           ;Principal.c: 236:             bcd_number = bcd_number + 0b00010000;
  3390     0F56  0871               	movf	Dec_to_Bcd@bcd_number,w
  3391     0F57  3E10               	addlw	16
  3392     0F58  00F1               	movwf	Dec_to_Bcd@bcd_number
  3393                           
  3394                           ;Principal.c: 237:         }
  3395     0F59  2F4D               	goto	l1478
  3396     0F5A                     l1482:
  3397                           
  3398                           ;Principal.c: 239:             bcd_number = bcd_number + dec_number;
  3399     0F5A  0870               	movf	Dec_to_Bcd@dec_number,w
  3400     0F5B  0771               	addwf	Dec_to_Bcd@bcd_number,w
  3401     0F5C  00F1               	movwf	Dec_to_Bcd@bcd_number
  3402     0F5D                     l1484:	
  3403                           ;Principal.c: 240:             break;
  3404                           
  3405                           
  3406                           ;Principal.c: 243:     return bcd_number;
  3407     0F5D  0871               	movf	Dec_to_Bcd@bcd_number,w
  3408     0F5E                     l112:
  3409     0F5E  0008               	return
  3410     0F5F                     __end_of_Dec_to_Bcd:
  3411                           
  3412                           	psect	text13
  3413     00E8                     __ptext13:	
  3414 ;; *************** function _Lcd_Write_String *****************
  3415 ;; Defined at:
  3416 ;;		line 118 in file "LCD.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  a               2    3[COMMON] PTR unsigned char 
  3419 ;;		 -> cSEG(3), cMIN(3), cHOR(3), cPOT1(4), 
  3420 ;;		 -> cYEAR(3), cMON(3), cDAY(3), STR_1(5), 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  i               2    8[COMMON] int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3432 ;;      Params:         2       0       0       0       0
  3433 ;;      Locals:         2       0       0       0       0
  3434 ;;      Temps:          3       0       0       0       0
  3435 ;;      Totals:         7       0       0       0       0
  3436 ;;Total ram usage:        7 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 2
  3439 ;; This function calls:
  3440 ;;		_Lcd_Write_Char
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446     00E8                     _Lcd_Write_String:	
  3447                           ;psect for function _Lcd_Write_String
  3448                           
  3449     00E8                     l1614:	
  3450                           ;incstack = 0
  3451                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3452                           
  3453                           
  3454                           ;LCD.c: 119:     int i;;LCD.c: 120:     for (i = 0; a[i] != '\0'; i++)
  3455     00E8  01F8               	clrf	Lcd_Write_String@i
  3456     00E9  01F9               	clrf	Lcd_Write_String@i+1
  3457     00EA  290D               	goto	l1620
  3458     00EB                     l1616:
  3459                           
  3460                           ;LCD.c: 121:         Lcd_Write_Char(a[i]);
  3461     00EB  0878               	movf	Lcd_Write_String@i,w
  3462     00EC  0773               	addwf	Lcd_Write_String@a,w
  3463     00ED  00F6               	movwf	??_Lcd_Write_String+1
  3464     00EE  0874               	movf	Lcd_Write_String@a+1,w
  3465     00EF  00F5               	movwf	??_Lcd_Write_String
  3466     00F0  1803               	skipnc
  3467     00F1  0AF5               	incf	??_Lcd_Write_String,f
  3468     00F2  1FF8               	btfss	Lcd_Write_String@i,7
  3469     00F3  28F5               	goto	u920
  3470     00F4  03F5               	decf	??_Lcd_Write_String,f
  3471     00F5                     u920:
  3472     00F5  0875               	movf	??_Lcd_Write_String,w
  3473     00F6  00F7               	movwf	??_Lcd_Write_String+2
  3474     00F7  0877               	movf	??_Lcd_Write_String+2,w
  3475     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  3476     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  3477     00FA  00FF               	movwf	btemp+1
  3478     00FB  0876               	movf	??_Lcd_Write_String+1,w
  3479     00FC  0084               	movwf	4
  3480     00FD  120A  158A  2000  120A  118A  	fcall	stringtab
  3481     0102  120A  158A  2774  120A  118A  	fcall	_Lcd_Write_Char
  3482     0107                     l1618:
  3483     0107  3001               	movlw	1
  3484     0108  07F8               	addwf	Lcd_Write_String@i,f
  3485     0109  1803               	skipnc
  3486     010A  0AF9               	incf	Lcd_Write_String@i+1,f
  3487     010B  3000               	movlw	0
  3488     010C  07F9               	addwf	Lcd_Write_String@i+1,f
  3489     010D                     l1620:
  3490     010D  0878               	movf	Lcd_Write_String@i,w
  3491     010E  0773               	addwf	Lcd_Write_String@a,w
  3492     010F  00F6               	movwf	??_Lcd_Write_String+1
  3493     0110  0874               	movf	Lcd_Write_String@a+1,w
  3494     0111  00F5               	movwf	??_Lcd_Write_String
  3495     0112  1803               	skipnc
  3496     0113  0AF5               	incf	??_Lcd_Write_String,f
  3497     0114  1FF8               	btfss	Lcd_Write_String@i,7
  3498     0115  2917               	goto	u930
  3499     0116  03F5               	decf	??_Lcd_Write_String,f
  3500     0117                     u930:
  3501     0117  0875               	movf	??_Lcd_Write_String,w
  3502     0118  00F7               	movwf	??_Lcd_Write_String+2
  3503     0119  0877               	movf	??_Lcd_Write_String+2,w
  3504     011A  1283               	bcf	3,5	;RP0=0, select bank0
  3505     011B  1303               	bcf	3,6	;RP1=0, select bank0
  3506     011C  00FF               	movwf	btemp+1
  3507     011D  0876               	movf	??_Lcd_Write_String+1,w
  3508     011E  0084               	movwf	4
  3509     011F  120A  158A  2000  120A  118A  	fcall	stringtab
  3510     0124  3A00               	xorlw	0
  3511     0125  1D03               	skipz
  3512     0126  2928               	goto	u941
  3513     0127  2929               	goto	u940
  3514     0128                     u941:
  3515     0128  28EB               	goto	l1616
  3516     0129                     u940:
  3517     0129                     l222:
  3518     0129  0008               	return
  3519     012A                     __end_of_Lcd_Write_String:
  3520                           
  3521                           	psect	text14
  3522     0F74                     __ptext14:	
  3523 ;; *************** function _Lcd_Write_Char *****************
  3524 ;; Defined at:
  3525 ;;		line 110 in file "LCD.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  a               1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  a               1    2[COMMON] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, pclath, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       0       0       0       0
  3540 ;;      Locals:         1       0       0       0       0
  3541 ;;      Temps:          1       0       0       0       0
  3542 ;;      Totals:         2       0       0       0       0
  3543 ;;Total ram usage:        2 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 1
  3546 ;; This function calls:
  3547 ;;		_Lcd_Port
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;;		_Lcd_Write_String
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554     0F74                     _Lcd_Write_Char:	
  3555                           ;psect for function _Lcd_Write_Char
  3556                           
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3560                           ;Lcd_Write_Char@a stored from wreg
  3561     0F74  00F2               	movwf	Lcd_Write_Char@a
  3562     0F75                     l1466:
  3563                           
  3564                           ;LCD.c: 111:     PORTDbits.RD6 = 1;
  3565     0F75  1283               	bcf	3,5	;RP0=0, select bank0
  3566     0F76  1303               	bcf	3,6	;RP1=0, select bank0
  3567     0F77  1708               	bsf	8,6	;volatile
  3568     0F78                     l1468:
  3569                           
  3570                           ;LCD.c: 112:     Lcd_Port(a);
  3571     0F78  0872               	movf	Lcd_Write_Char@a,w
  3572     0F79  120A  118A  20AA  120A  158A  	fcall	_Lcd_Port
  3573     0F7E                     l1470:
  3574                           
  3575                           ;LCD.c: 113:     PORTDbits.RD7 = 1;
  3576     0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  3577     0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  3578     0F80  1788               	bsf	8,7	;volatile
  3579     0F81                     l1472:
  3580                           
  3581                           ;LCD.c: 114:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3582     0F81  301A               	movlw	26
  3583     0F82  00F1               	movwf	??_Lcd_Write_Char
  3584     0F83                     u1187:
  3585     0F83  0BF1               	decfsz	??_Lcd_Write_Char,f
  3586     0F84  2F83               	goto	u1187
  3587     0F85  0000               	nop
  3588     0F86                     l1474:
  3589                           
  3590                           ;LCD.c: 115:     PORTDbits.RD7 = 0;
  3591     0F86  1283               	bcf	3,5	;RP0=0, select bank0
  3592     0F87  1303               	bcf	3,6	;RP1=0, select bank0
  3593     0F88  1388               	bcf	8,7	;volatile
  3594     0F89                     l216:
  3595     0F89  0008               	return
  3596     0F8A                     __end_of_Lcd_Write_Char:
  3597                           
  3598                           	psect	text15
  3599     0FBC                     __ptext15:	
  3600 ;; *************** function _Lcd_Set_Cursor *****************
  3601 ;; Defined at:
  3602 ;;		line 71 in file "LCD.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  a               1    wreg     unsigned char 
  3605 ;;  b               1    4[COMMON] unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  a               1    5[COMMON] unsigned char 
  3608 ;;  temp            1    6[COMMON] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0, pclath, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         1       0       0       0       0
  3619 ;;      Locals:         2       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0
  3621 ;;      Totals:         3       0       0       0       0
  3622 ;;Total ram usage:        3 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 2
  3625 ;; This function calls:
  3626 ;;		_Lcd_Cmd
  3627 ;; This function is called by:
  3628 ;;		_main
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632     0FBC                     _Lcd_Set_Cursor:	
  3633                           ;psect for function _Lcd_Set_Cursor
  3634                           
  3635                           
  3636                           ;incstack = 0
  3637                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3638                           ;Lcd_Set_Cursor@a stored from wreg
  3639     0FBC  00F5               	movwf	Lcd_Set_Cursor@a
  3640     0FBD                     l1602:
  3641                           
  3642                           ;LCD.c: 72:     char temp;;LCD.c: 73:     if (a == 1) {
  3643     0FBD  0375               	decf	Lcd_Set_Cursor@a,w
  3644     0FBE  1D03               	btfss	3,2
  3645     0FBF  2FC1               	goto	u901
  3646     0FC0  2FC2               	goto	u900
  3647     0FC1                     u901:
  3648     0FC1  2FCC               	goto	l1608
  3649     0FC2                     u900:
  3650     0FC2                     l1604:
  3651                           
  3652                           ;LCD.c: 74:         temp = 0x80 + b - 1;
  3653     0FC2  0874               	movf	Lcd_Set_Cursor@b,w
  3654     0FC3  3E7F               	addlw	127
  3655     0FC4  00F6               	movwf	Lcd_Set_Cursor@temp
  3656     0FC5                     l1606:
  3657                           
  3658                           ;LCD.c: 75:         Lcd_Cmd(temp);
  3659     0FC5  0876               	movf	Lcd_Set_Cursor@temp,w
  3660     0FC6  120A  158A  27A2  120A  158A  	fcall	_Lcd_Cmd
  3661                           
  3662                           ;LCD.c: 76:     } else if (a == 2) {
  3663     0FCB  2FDB               	goto	l210
  3664     0FCC                     l1608:
  3665     0FCC  3002               	movlw	2
  3666     0FCD  0675               	xorwf	Lcd_Set_Cursor@a,w
  3667     0FCE  1D03               	btfss	3,2
  3668     0FCF  2FD1               	goto	u911
  3669     0FD0  2FD2               	goto	u910
  3670     0FD1                     u911:
  3671     0FD1  2FDB               	goto	l210
  3672     0FD2                     u910:
  3673     0FD2                     l1610:
  3674                           
  3675                           ;LCD.c: 77:         temp = 0xC0 + b - 1;
  3676     0FD2  0874               	movf	Lcd_Set_Cursor@b,w
  3677     0FD3  3EBF               	addlw	191
  3678     0FD4  00F6               	movwf	Lcd_Set_Cursor@temp
  3679     0FD5                     l1612:
  3680                           
  3681                           ;LCD.c: 78:         Lcd_Cmd(temp);
  3682     0FD5  0876               	movf	Lcd_Set_Cursor@temp,w
  3683     0FD6  120A  158A  27A2  120A  158A  	fcall	_Lcd_Cmd
  3684     0FDB                     l210:
  3685     0FDB  0008               	return
  3686     0FDC                     __end_of_Lcd_Set_Cursor:
  3687                           
  3688                           	psect	text16
  3689     016E                     __ptext16:	
  3690 ;; *************** function _Lcd_Init *****************
  3691 ;; Defined at:
  3692 ;;		line 82 in file "LCD.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0, pclath, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3706 ;;      Params:         0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0
  3708 ;;      Temps:          2       0       0       0       0
  3709 ;;      Totals:         2       0       0       0       0
  3710 ;;Total ram usage:        2 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; Hardware stack levels required when called: 2
  3713 ;; This function calls:
  3714 ;;		_Lcd_Cmd
  3715 ;;		_Lcd_Port
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721     016E                     _Lcd_Init:	
  3722                           ;psect for function _Lcd_Init
  3723                           
  3724     016E                     l1590:	
  3725                           ;incstack = 0
  3726                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3727                           
  3728                           
  3729                           ;LCD.c: 83:     Lcd_Port(0x00);
  3730     016E  3000               	movlw	0
  3731     016F  120A  118A  20AA  120A  118A  	fcall	_Lcd_Port
  3732     0174                     l1592:
  3733                           
  3734                           ;LCD.c: 84:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3735     0174  3034               	movlw	52
  3736     0175  00F5               	movwf	??_Lcd_Init+1
  3737     0176  30F1               	movlw	241
  3738     0177  00F4               	movwf	??_Lcd_Init
  3739     0178                     u1197:
  3740     0178  0BF4               	decfsz	??_Lcd_Init,f
  3741     0179  2978               	goto	u1197
  3742     017A  0BF5               	decfsz	??_Lcd_Init+1,f
  3743     017B  2978               	goto	u1197
  3744     017C  297D               	nop2
  3745     017D                     l1594:
  3746                           
  3747                           ;LCD.c: 85:     Lcd_Cmd(0x03);
  3748     017D  3003               	movlw	3
  3749     017E  120A  158A  27A2  120A  118A  	fcall	_Lcd_Cmd
  3750                           
  3751                           ;LCD.c: 86:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3752     0183  300D               	movlw	13
  3753     0184  00F5               	movwf	??_Lcd_Init+1
  3754     0185  30FB               	movlw	251
  3755     0186  00F4               	movwf	??_Lcd_Init
  3756     0187                     u1207:
  3757     0187  0BF4               	decfsz	??_Lcd_Init,f
  3758     0188  2987               	goto	u1207
  3759     0189  0BF5               	decfsz	??_Lcd_Init+1,f
  3760     018A  2987               	goto	u1207
  3761     018B  298C               	nop2
  3762     018C                     l1596:
  3763                           
  3764                           ;LCD.c: 87:     Lcd_Cmd(0x03);
  3765     018C  3003               	movlw	3
  3766     018D  120A  158A  27A2  120A  118A  	fcall	_Lcd_Cmd
  3767     0192                     l1598:
  3768                           
  3769                           ;LCD.c: 88:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3770     0192  301D               	movlw	29
  3771     0193  00F5               	movwf	??_Lcd_Init+1
  3772     0194  3091               	movlw	145
  3773     0195  00F4               	movwf	??_Lcd_Init
  3774     0196                     u1217:
  3775     0196  0BF4               	decfsz	??_Lcd_Init,f
  3776     0197  2996               	goto	u1217
  3777     0198  0BF5               	decfsz	??_Lcd_Init+1,f
  3778     0199  2996               	goto	u1217
  3779                           
  3780                           ;LCD.c: 89:     Lcd_Cmd(0x03);
  3781     019A  3003               	movlw	3
  3782     019B  120A  158A  27A2  120A  118A  	fcall	_Lcd_Cmd
  3783                           
  3784                           ;LCD.c: 93:     Lcd_Cmd(0b00111000);
  3785     01A0  3038               	movlw	56
  3786     01A1  120A  158A  27A2  120A  118A  	fcall	_Lcd_Cmd
  3787                           
  3788                           ;LCD.c: 94:     Lcd_Cmd(0b00001100);
  3789     01A6  300C               	movlw	12
  3790     01A7  120A  158A  27A2  120A  118A  	fcall	_Lcd_Cmd
  3791                           
  3792                           ;LCD.c: 95:     Lcd_Cmd(0b00000001);
  3793     01AC  3001               	movlw	1
  3794     01AD  120A  158A  27A2  120A  118A  	fcall	_Lcd_Cmd
  3795                           
  3796                           ;LCD.c: 96:     Lcd_Cmd(0b00000110);
  3797     01B2  3006               	movlw	6
  3798     01B3  120A  158A  27A2  120A  118A  	fcall	_Lcd_Cmd
  3799     01B8                     l213:
  3800     01B8  0008               	return
  3801     01B9                     __end_of_Lcd_Init:
  3802                           
  3803                           	psect	text17
  3804     0003                     __ptext17:	
  3805 ;; *************** function _Lcd_Clear *****************
  3806 ;; Defined at:
  3807 ;;		line 67 in file "LCD.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, pclath, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         0       0       0       0       0
  3822 ;;      Locals:         0       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0
  3824 ;;      Totals:         0       0       0       0       0
  3825 ;;Total ram usage:        0 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; Hardware stack levels required when called: 2
  3828 ;; This function calls:
  3829 ;;		_Lcd_Cmd
  3830 ;; This function is called by:
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835     0003                     _Lcd_Clear:	
  3836                           ;psect for function _Lcd_Clear
  3837                           
  3838     0003                     l1600:	
  3839                           ;incstack = 0
  3840                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3841                           
  3842                           
  3843                           ;LCD.c: 68:     Lcd_Cmd(1);
  3844     0003  3001               	movlw	1
  3845     0004  120A  158A  27A2  120A  118A  	fcall	_Lcd_Cmd
  3846     0009                     l204:
  3847     0009  0008               	return
  3848     000A                     __end_of_Lcd_Clear:
  3849                           
  3850                           	psect	text18
  3851     0FA2                     __ptext18:	
  3852 ;; *************** function _Lcd_Cmd *****************
  3853 ;; Defined at:
  3854 ;;		line 59 in file "LCD.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  a               1    wreg     unsigned char 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  a               1    3[COMMON] unsigned char 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, pclath, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3868 ;;      Params:         0       0       0       0       0
  3869 ;;      Locals:         1       0       0       0       0
  3870 ;;      Temps:          2       0       0       0       0
  3871 ;;      Totals:         3       0       0       0       0
  3872 ;;Total ram usage:        3 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; Hardware stack levels required when called: 1
  3875 ;; This function calls:
  3876 ;;		_Lcd_Port
  3877 ;; This function is called by:
  3878 ;;		_Lcd_Clear
  3879 ;;		_Lcd_Set_Cursor
  3880 ;;		_Lcd_Init
  3881 ;;		_Lcd_Shift_Right
  3882 ;;		_Lcd_Shift_Left
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886     0FA2                     _Lcd_Cmd:	
  3887                           ;psect for function _Lcd_Cmd
  3888                           
  3889                           
  3890                           ;incstack = 0
  3891                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3892                           ;Lcd_Cmd@a stored from wreg
  3893     0FA2  00F3               	movwf	Lcd_Cmd@a
  3894     0FA3                     l1488:
  3895                           
  3896                           ;LCD.c: 60:     PORTDbits.RD6 = 0;
  3897     0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3898     0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3899     0FA5  1308               	bcf	8,6	;volatile
  3900     0FA6                     l1490:
  3901                           
  3902                           ;LCD.c: 61:     Lcd_Port(a);
  3903     0FA6  0873               	movf	Lcd_Cmd@a,w
  3904     0FA7  120A  118A  20AA  120A  158A  	fcall	_Lcd_Port
  3905     0FAC                     l1492:
  3906                           
  3907                           ;LCD.c: 62:     PORTDbits.RD7 = 1;
  3908     0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3909     0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  3910     0FAE  1788               	bsf	8,7	;volatile
  3911     0FAF                     l1494:
  3912                           
  3913                           ;LCD.c: 63:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3914     0FAF  300B               	movlw	11
  3915     0FB0  00F2               	movwf	??_Lcd_Cmd+1
  3916     0FB1  3062               	movlw	98
  3917     0FB2  00F1               	movwf	??_Lcd_Cmd
  3918     0FB3                     u1227:
  3919     0FB3  0BF1               	decfsz	??_Lcd_Cmd,f
  3920     0FB4  2FB3               	goto	u1227
  3921     0FB5  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3922     0FB6  2FB3               	goto	u1227
  3923     0FB7  0000               	nop
  3924     0FB8                     l1496:
  3925                           
  3926                           ;LCD.c: 64:     PORTDbits.RD7 = 0;
  3927     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  3928     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  3929     0FBA  1388               	bcf	8,7	;volatile
  3930     0FBB                     l201:
  3931     0FBB  0008               	return
  3932     0FBC                     __end_of_Lcd_Cmd:
  3933                           
  3934                           	psect	text19
  3935     00AA                     __ptext19:	
  3936 ;; *************** function _Lcd_Port *****************
  3937 ;; Defined at:
  3938 ;;		line 17 in file "LCD.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  a               1    wreg     unsigned char 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  a               1    0[COMMON] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3952 ;;      Params:         0       0       0       0       0
  3953 ;;      Locals:         1       0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0
  3955 ;;      Totals:         1       0       0       0       0
  3956 ;;Total ram usage:        1 bytes
  3957 ;; Hardware stack levels used: 1
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_Lcd_Cmd
  3962 ;;		_Lcd_Init
  3963 ;;		_Lcd_Write_Char
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967     00AA                     _Lcd_Port:	
  3968                           ;psect for function _Lcd_Port
  3969                           
  3970                           
  3971                           ;incstack = 0
  3972                           ; Regs used in _Lcd_Port: [wreg]
  3973                           ;Lcd_Port@a stored from wreg
  3974     00AA  00F0               	movwf	Lcd_Port@a
  3975     00AB                     l1400:
  3976                           
  3977                           ;LCD.c: 18:     if (a & 0b00000001)
  3978     00AB  1C70               	btfss	Lcd_Port@a,0
  3979     00AC  28AE               	goto	u581
  3980     00AD  28AF               	goto	u580
  3981     00AE                     u581:
  3982     00AE  28B3               	goto	l182
  3983     00AF                     u580:
  3984     00AF                     l1402:
  3985                           
  3986                           ;LCD.c: 19:         PORTBbits.RB0 = 1;
  3987     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  3988     00B0  1303               	bcf	3,6	;RP1=0, select bank0
  3989     00B1  1406               	bsf	6,0	;volatile
  3990     00B2  28B6               	goto	l183
  3991     00B3                     l182:	
  3992                           ;LCD.c: 20:     else
  3993                           
  3994                           
  3995                           ;LCD.c: 21:         PORTBbits.RB0 = 0;
  3996     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  3997     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  3998     00B5  1006               	bcf	6,0	;volatile
  3999     00B6                     l183:
  4000                           
  4001                           ;LCD.c: 23:     if (a & 0b00000010)
  4002     00B6  1CF0               	btfss	Lcd_Port@a,1
  4003     00B7  28B9               	goto	u591
  4004     00B8  28BA               	goto	u590
  4005     00B9                     u591:
  4006     00B9  28BC               	goto	l184
  4007     00BA                     u590:
  4008     00BA                     l1404:
  4009                           
  4010                           ;LCD.c: 24:         PORTBbits.RB1 = 1;
  4011     00BA  1486               	bsf	6,1	;volatile
  4012     00BB  28BD               	goto	l185
  4013     00BC                     l184:	
  4014                           ;LCD.c: 25:     else
  4015                           
  4016                           
  4017                           ;LCD.c: 26:         PORTBbits.RB1 = 0;
  4018     00BC  1086               	bcf	6,1	;volatile
  4019     00BD                     l185:
  4020                           
  4021                           ;LCD.c: 28:     if (a & 0b00000100)
  4022     00BD  1D70               	btfss	Lcd_Port@a,2
  4023     00BE  28C0               	goto	u601
  4024     00BF  28C1               	goto	u600
  4025     00C0                     u601:
  4026     00C0  28C3               	goto	l186
  4027     00C1                     u600:
  4028     00C1                     l1406:
  4029                           
  4030                           ;LCD.c: 29:         PORTBbits.RB2 = 1;
  4031     00C1  1506               	bsf	6,2	;volatile
  4032     00C2  28C4               	goto	l187
  4033     00C3                     l186:	
  4034                           ;LCD.c: 30:     else
  4035                           
  4036                           
  4037                           ;LCD.c: 31:         PORTBbits.RB2 = 0;
  4038     00C3  1106               	bcf	6,2	;volatile
  4039     00C4                     l187:
  4040                           
  4041                           ;LCD.c: 33:     if (a & 0b00001000)
  4042     00C4  1DF0               	btfss	Lcd_Port@a,3
  4043     00C5  28C7               	goto	u611
  4044     00C6  28C8               	goto	u610
  4045     00C7                     u611:
  4046     00C7  28CA               	goto	l188
  4047     00C8                     u610:
  4048     00C8                     l1408:
  4049                           
  4050                           ;LCD.c: 34:         PORTBbits.RB3 = 1;
  4051     00C8  1586               	bsf	6,3	;volatile
  4052     00C9  28CB               	goto	l189
  4053     00CA                     l188:	
  4054                           ;LCD.c: 35:     else
  4055                           
  4056                           
  4057                           ;LCD.c: 36:         PORTBbits.RB3 = 0;
  4058     00CA  1186               	bcf	6,3	;volatile
  4059     00CB                     l189:
  4060                           
  4061                           ;LCD.c: 38:     if (a & 0b00010000)
  4062     00CB  1E70               	btfss	Lcd_Port@a,4
  4063     00CC  28CE               	goto	u621
  4064     00CD  28CF               	goto	u620
  4065     00CE                     u621:
  4066     00CE  28D1               	goto	l190
  4067     00CF                     u620:
  4068     00CF                     l1410:
  4069                           
  4070                           ;LCD.c: 39:         PORTBbits.RB4 = 1;
  4071     00CF  1606               	bsf	6,4	;volatile
  4072     00D0  28D2               	goto	l191
  4073     00D1                     l190:	
  4074                           ;LCD.c: 40:     else
  4075                           
  4076                           
  4077                           ;LCD.c: 41:         PORTBbits.RB4 = 0;
  4078     00D1  1206               	bcf	6,4	;volatile
  4079     00D2                     l191:
  4080                           
  4081                           ;LCD.c: 43:     if (a & 0b00100000)
  4082     00D2  1EF0               	btfss	Lcd_Port@a,5
  4083     00D3  28D5               	goto	u631
  4084     00D4  28D6               	goto	u630
  4085     00D5                     u631:
  4086     00D5  28D8               	goto	l192
  4087     00D6                     u630:
  4088     00D6                     l1412:
  4089                           
  4090                           ;LCD.c: 44:         PORTBbits.RB5 = 1;
  4091     00D6  1686               	bsf	6,5	;volatile
  4092     00D7  28D9               	goto	l193
  4093     00D8                     l192:	
  4094                           ;LCD.c: 45:     else
  4095                           
  4096                           
  4097                           ;LCD.c: 46:         PORTBbits.RB5 = 0;
  4098     00D8  1286               	bcf	6,5	;volatile
  4099     00D9                     l193:
  4100                           
  4101                           ;LCD.c: 48:     if (a & 0b01000000)
  4102     00D9  1F70               	btfss	Lcd_Port@a,6
  4103     00DA  28DC               	goto	u641
  4104     00DB  28DD               	goto	u640
  4105     00DC                     u641:
  4106     00DC  28DF               	goto	l194
  4107     00DD                     u640:
  4108     00DD                     l1414:
  4109                           
  4110                           ;LCD.c: 49:         PORTBbits.RB6 = 1;
  4111     00DD  1706               	bsf	6,6	;volatile
  4112     00DE  28E0               	goto	l195
  4113     00DF                     l194:	
  4114                           ;LCD.c: 50:     else
  4115                           
  4116                           
  4117                           ;LCD.c: 51:         PORTBbits.RB6 = 0;
  4118     00DF  1306               	bcf	6,6	;volatile
  4119     00E0                     l195:
  4120                           
  4121                           ;LCD.c: 53:     if (a & 0b10000000)
  4122     00E0  1FF0               	btfss	Lcd_Port@a,7
  4123     00E1  28E3               	goto	u651
  4124     00E2  28E4               	goto	u650
  4125     00E3                     u651:
  4126     00E3  28E6               	goto	l196
  4127     00E4                     u650:
  4128     00E4                     l1416:
  4129                           
  4130                           ;LCD.c: 54:         PORTBbits.RB7 = 1;
  4131     00E4  1786               	bsf	6,7	;volatile
  4132     00E5  28E7               	goto	l198
  4133     00E6                     l196:	
  4134                           ;LCD.c: 55:     else
  4135                           
  4136                           
  4137                           ;LCD.c: 56:         PORTBbits.RB7 = 0;
  4138     00E6  1386               	bcf	6,7	;volatile
  4139     00E7                     l198:
  4140     00E7  0008               	return
  4141     00E8                     __end_of_Lcd_Port:
  4142                           
  4143                           	psect	text20
  4144     0F19                     __ptext20:	
  4145 ;; *************** function _I2C_Master_RepeatedStart *****************
  4146 ;; Defined at:
  4147 ;;		line 47 in file "I2C.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0, pclath, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4161 ;;      Params:         0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0
  4164 ;;      Totals:         0       0       0       0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 1
  4168 ;; This function calls:
  4169 ;;		_I2C_Master_Wait
  4170 ;; This function is called by:
  4171 ;;		_main
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175     0F19                     _I2C_Master_RepeatedStart:	
  4176                           ;psect for function _I2C_Master_RepeatedStart
  4177                           
  4178     0F19                     l1638:	
  4179                           ;incstack = 0
  4180                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4181                           
  4182                           
  4183                           ;I2C.c: 49:     I2C_Master_Wait();
  4184     0F19  120A  158A  273E  120A  158A  	fcall	_I2C_Master_Wait
  4185     0F1E                     l1640:
  4186                           
  4187                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  4188     0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  4189     0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  4190     0F20  1491               	bsf	17,1	;volatile
  4191     0F21                     l159:
  4192     0F21  0008               	return
  4193     0F22                     __end_of_I2C_Master_RepeatedStart:
  4194                           
  4195                           	psect	text21
  4196     000A                     __ptext21:	
  4197 ;; *************** function _I2C_Master_Read *****************
  4198 ;; Defined at:
  4199 ;;		line 74 in file "I2C.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  a               2    0[COMMON] unsigned short 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  temp            2    4[COMMON] unsigned short 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  2    0[COMMON] unsigned short 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0, pclath, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         2       0       0       0       0
  4214 ;;      Locals:         2       0       0       0       0
  4215 ;;      Temps:          2       0       0       0       0
  4216 ;;      Totals:         6       0       0       0       0
  4217 ;;Total ram usage:        6 bytes
  4218 ;; Hardware stack levels used: 1
  4219 ;; Hardware stack levels required when called: 1
  4220 ;; This function calls:
  4221 ;;		_I2C_Master_Wait
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227     000A                     _I2C_Master_Read:	
  4228                           ;psect for function _I2C_Master_Read
  4229                           
  4230     000A                     l1622:	
  4231                           ;incstack = 0
  4232                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4233                           
  4234                           
  4235                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4236     000A  120A  158A  273E  120A  118A  	fcall	_I2C_Master_Wait
  4237     000F                     l1624:
  4238                           
  4239                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4240     000F  1683               	bsf	3,5	;RP0=1, select bank1
  4241     0010  1303               	bcf	3,6	;RP1=0, select bank1
  4242     0011  1591               	bsf	17,3	;volatile
  4243                           
  4244                           ;I2C.c: 79:     I2C_Master_Wait();
  4245     0012  120A  158A  273E  120A  118A  	fcall	_I2C_Master_Wait
  4246     0017                     l1626:
  4247                           
  4248                           ;I2C.c: 80:     temp = SSPBUF;
  4249     0017  1283               	bcf	3,5	;RP0=0, select bank0
  4250     0018  1303               	bcf	3,6	;RP1=0, select bank0
  4251     0019  0813               	movf	19,w	;volatile
  4252     001A  00F2               	movwf	??_I2C_Master_Read
  4253     001B  01F3               	clrf	??_I2C_Master_Read+1
  4254     001C  0872               	movf	??_I2C_Master_Read,w
  4255     001D  00F4               	movwf	I2C_Master_Read@temp
  4256     001E  0873               	movf	??_I2C_Master_Read+1,w
  4257     001F  00F5               	movwf	I2C_Master_Read@temp+1
  4258     0020                     l1628:
  4259                           
  4260                           ;I2C.c: 81:     I2C_Master_Wait();
  4261     0020  120A  158A  273E  120A  118A  	fcall	_I2C_Master_Wait
  4262     0025                     l1630:
  4263                           
  4264                           ;I2C.c: 82:     if(a == 1){
  4265     0025  0370               	decf	I2C_Master_Read@a,w
  4266     0026  0471               	iorwf	I2C_Master_Read@a+1,w
  4267     0027  1D03               	btfss	3,2
  4268     0028  282A               	goto	u951
  4269     0029  282B               	goto	u950
  4270     002A                     u951:
  4271     002A  282F               	goto	l168
  4272     002B                     u950:
  4273     002B                     l1632:
  4274                           
  4275                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4276     002B  1683               	bsf	3,5	;RP0=1, select bank1
  4277     002C  1303               	bcf	3,6	;RP1=0, select bank1
  4278     002D  1291               	bcf	17,5	;volatile
  4279                           
  4280                           ;I2C.c: 84:     }else{
  4281     002E  2832               	goto	l169
  4282     002F                     l168:
  4283                           
  4284                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4285     002F  1683               	bsf	3,5	;RP0=1, select bank1
  4286     0030  1303               	bcf	3,6	;RP1=0, select bank1
  4287     0031  1691               	bsf	17,5	;volatile
  4288     0032                     l169:	
  4289                           ;I2C.c: 86:     }
  4290                           
  4291                           
  4292                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4293     0032  1611               	bsf	17,4	;volatile
  4294     0033                     l1634:
  4295                           
  4296                           ;I2C.c: 88:     return temp;
  4297     0033  0875               	movf	I2C_Master_Read@temp+1,w
  4298     0034  00F1               	movwf	?_I2C_Master_Read+1
  4299     0035  0874               	movf	I2C_Master_Read@temp,w
  4300     0036  00F0               	movwf	?_I2C_Master_Read
  4301     0037                     l170:
  4302     0037  0008               	return
  4303     0038                     __end_of_I2C_Master_Read:
  4304                           
  4305                           	psect	text22
  4306     0F3E                     __ptext22:	
  4307 ;; *************** function _I2C_Master_Wait *****************
  4308 ;; Defined at:
  4309 ;;		line 32 in file "I2C.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_I2C_Master_Start
  4333 ;;		_I2C_Master_RepeatedStart
  4334 ;;		_I2C_Master_Stop
  4335 ;;		_I2C_Master_Write
  4336 ;;		_I2C_Master_Read
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340     0F3E                     _I2C_Master_Wait:	
  4341                           ;psect for function _I2C_Master_Wait
  4342                           
  4343     0F3E                     l1396:	
  4344                           ;incstack = 0
  4345                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4346                           
  4347     0F3E                     l150:	
  4348                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4349                           
  4350     0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  4351     0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  4352     0F40  1914               	btfsc	20,2	;volatile
  4353     0F41  2F43               	goto	u561
  4354     0F42  2F44               	goto	u560
  4355     0F43                     u561:
  4356     0F43  2F3E               	goto	l150
  4357     0F44                     u560:
  4358     0F44                     l1398:
  4359     0F44  0811               	movf	17,w	;volatile
  4360     0F45  391F               	andlw	31
  4361     0F46  1D03               	btfss	3,2
  4362     0F47  2F49               	goto	u571
  4363     0F48  2F4A               	goto	u570
  4364     0F49                     u571:
  4365     0F49  2F3E               	goto	l150
  4366     0F4A                     u570:
  4367     0F4A                     l153:
  4368     0F4A  0008               	return
  4369     0F4B                     __end_of_I2C_Master_Wait:
  4370                           
  4371                           	psect	text23
  4372     0F8A                     __ptext23:	
  4373 ;; *************** function _Bcd_to_Dec *****************
  4374 ;; Defined at:
  4375 ;;		line 224 in file "Principal.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  bcd             1    wreg     unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  bcd             1    7[COMMON] unsigned char 
  4380 ;;  dec             1    6[COMMON] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      unsigned char 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2, status,0, pclath, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4390 ;;      Params:         0       0       0       0       0
  4391 ;;      Locals:         2       0       0       0       0
  4392 ;;      Temps:          2       0       0       0       0
  4393 ;;      Totals:         4       0       0       0       0
  4394 ;;Total ram usage:        4 bytes
  4395 ;; Hardware stack levels used: 1
  4396 ;; Hardware stack levels required when called: 1
  4397 ;; This function calls:
  4398 ;;		___bmul
  4399 ;; This function is called by:
  4400 ;;		_main
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404     0F8A                     _Bcd_to_Dec:	
  4405                           ;psect for function _Bcd_to_Dec
  4406                           
  4407                           
  4408                           ;incstack = 0
  4409                           ; Regs used in _Bcd_to_Dec: [wreg+status,2+status,0+pclath+cstack]
  4410                           ;Bcd_to_Dec@bcd stored from wreg
  4411     0F8A  00F7               	movwf	Bcd_to_Dec@bcd
  4412     0F8B                     l1642:
  4413                           
  4414                           ;Principal.c: 225:     uint8_t dec;;Principal.c: 226:     dec = ((bcd>>4)*10)+(bcd & 0b0
      +                          0001111);
  4415     0F8B  300F               	movlw	15
  4416     0F8C  0577               	andwf	Bcd_to_Dec@bcd,w
  4417     0F8D  00F4               	movwf	??_Bcd_to_Dec
  4418     0F8E  300A               	movlw	10
  4419     0F8F  00F0               	movwf	___bmul@multiplicand
  4420     0F90  0877               	movf	Bcd_to_Dec@bcd,w
  4421     0F91  00F5               	movwf	??_Bcd_to_Dec+1
  4422     0F92  3004               	movlw	4
  4423     0F93                     u965:
  4424     0F93  1003               	clrc
  4425     0F94  0CF5               	rrf	??_Bcd_to_Dec+1,f
  4426     0F95  3EFF               	addlw	-1
  4427     0F96  1D03               	skipz
  4428     0F97  2F93               	goto	u965
  4429     0F98  0875               	movf	??_Bcd_to_Dec+1,w
  4430     0F99  120A  158A  275F  120A  158A  	fcall	___bmul
  4431     0F9E  0774               	addwf	??_Bcd_to_Dec,w
  4432     0F9F  00F6               	movwf	Bcd_to_Dec@dec
  4433     0FA0                     l1644:
  4434                           
  4435                           ;Principal.c: 227:     return dec;
  4436     0FA0  0876               	movf	Bcd_to_Dec@dec,w
  4437     0FA1                     l104:
  4438     0FA1  0008               	return
  4439     0FA2                     __end_of_Bcd_to_Dec:
  4440                           
  4441                           	psect	text24
  4442     0F5F                     __ptext24:	
  4443 ;; *************** function ___bmul *****************
  4444 ;; Defined at:
  4445 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  multiplier      1    wreg     unsigned char 
  4448 ;;  multiplicand    1    0[COMMON] unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  multiplier      1    3[COMMON] unsigned char 
  4451 ;;  product         1    2[COMMON] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      unsigned char 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         1       0       0       0       0
  4462 ;;      Locals:         2       0       0       0       0
  4463 ;;      Temps:          1       0       0       0       0
  4464 ;;      Totals:         4       0       0       0       0
  4465 ;;Total ram usage:        4 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_Bcd_to_Dec
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474     0F5F                     ___bmul:	
  4475                           ;psect for function ___bmul
  4476                           
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4480                           ;___bmul@multiplier stored from wreg
  4481     0F5F  00F3               	movwf	___bmul@multiplier
  4482     0F60                     l1498:
  4483     0F60  01F2               	clrf	___bmul@product
  4484     0F61                     l1500:
  4485     0F61  1C73               	btfss	___bmul@multiplier,0
  4486     0F62  2F64               	goto	u751
  4487     0F63  2F65               	goto	u750
  4488     0F64                     u751:
  4489     0F64  2F69               	goto	l1504
  4490     0F65                     u750:
  4491     0F65                     l1502:
  4492     0F65  0870               	movf	___bmul@multiplicand,w
  4493     0F66  00F1               	movwf	??___bmul
  4494     0F67  0871               	movf	??___bmul,w
  4495     0F68  07F2               	addwf	___bmul@product,f
  4496     0F69                     l1504:
  4497     0F69  1003               	clrc
  4498     0F6A  0DF0               	rlf	___bmul@multiplicand,f
  4499     0F6B                     l1506:
  4500     0F6B  1003               	clrc
  4501     0F6C  0CF3               	rrf	___bmul@multiplier,f
  4502     0F6D  0873               	movf	___bmul@multiplier,w
  4503     0F6E  1D03               	btfss	3,2
  4504     0F6F  2F71               	goto	u761
  4505     0F70  2F72               	goto	u760
  4506     0F71                     u761:
  4507     0F71  2F61               	goto	l1500
  4508     0F72                     u760:
  4509     0F72                     l1508:
  4510     0F72  0872               	movf	___bmul@product,w
  4511     0F73                     l368:
  4512     0F73  0008               	return
  4513     0F74                     __end_of___bmul:
  4514     007E                     btemp	set	126	;btemp
  4515     007E                     wtemp0	set	126
  4516                           
  4517                           	psect	idloc
  4518                           
  4519                           ;Config register IDLOC0 @ 0x2000
  4520                           ;	unspecified, using default values
  4521     2000                     	org	8192
  4522     2000  3FFF               	dw	16383
  4523                           
  4524                           ;Config register IDLOC1 @ 0x2001
  4525                           ;	unspecified, using default values
  4526     2001                     	org	8193
  4527     2001  3FFF               	dw	16383
  4528                           
  4529                           ;Config register IDLOC2 @ 0x2002
  4530                           ;	unspecified, using default values
  4531     2002                     	org	8194
  4532     2002  3FFF               	dw	16383
  4533                           
  4534                           ;Config register IDLOC3 @ 0x2003
  4535                           ;	unspecified, using default values
  4536     2003                     	org	8195
  4537     2003  3FFF               	dw	16383
  4538                           
  4539                           	psect	config
  4540                           
  4541                           ;Config register CONFIG1 @ 0x2007
  4542                           ;	Oscillator Selection bits
  4543                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  4544                           ;	Watchdog Timer Enable bit
  4545                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4546                           ;	Power-up Timer Enable bit
  4547                           ;	PWRTE = OFF, PWRT disabled
  4548                           ;	RE3/MCLR pin function select bit
  4549                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4550                           ;	Code Protection bit
  4551                           ;	CP = OFF, Program memory code protection is disabled
  4552                           ;	Data Code Protection bit
  4553                           ;	CPD = OFF, Data memory code protection is disabled
  4554                           ;	Brown Out Reset Selection bits
  4555                           ;	BOREN = OFF, BOR disabled
  4556                           ;	Internal External Switchover bit
  4557                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4558                           ;	Fail-Safe Clock Monitor Enabled bit
  4559                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4560                           ;	Low Voltage Programming Enable bit
  4561                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4562                           ;	In-Circuit Debugger Mode bit
  4563                           ;	DEBUG = 0x1, unprogrammed default
  4564     2007                     	org	8199
  4565     2007  20D6               	dw	8406
  4566                           
  4567                           ;Config register CONFIG2 @ 0x2008
  4568                           ;	Brown-out Reset Selection bit
  4569                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4570                           ;	Flash Program Memory Self Write Enable bits
  4571                           ;	WRT = OFF, Write protection off
  4572     2008                     	org	8200
  4573     2008  3FFF               	dw	16383

Data Sizes:
    Strings     8
    Constant    10
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> cSEG(BANK0[3]), cMIN(BANK0[3]), cHOR(BANK0[3]), cPOT1(BANK0[4]), 
		 -> cYEAR(BANK0[3]), cMON(BANK0[3]), cDAY(BANK0[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 5
		 -> cSEG(BANK0[3]), cMIN(BANK0[3]), cHOR(BANK0[3]), cPOT1(BANK0[4]), 
		 -> cYEAR(BANK0[3]), cMON(BANK0[3]), cDAY(BANK0[3]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _Set_Time_RTC->_I2C_Master_Write
    _Set_Date_RTC->_I2C_Master_Write
    _I2C_Master_Write->_Dec_to_Bcd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Bcd_to_Dec->___bmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15209
                                             13 BANK0      3     3      0
                         _Bcd_to_Dec
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                       _Set_Date_RTC
                       _Set_Time_RTC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1865
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Set_Time_RTC                                         5     3      2    3188
                                              4 COMMON     5     3      2
                         _Dec_to_Bcd
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _Set_Date_RTC                                         5     3      2    3188
                                              4 COMMON     5     3      2
                         _Dec_to_Bcd
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    2834
                                              2 COMMON     2     0      2
                         _Dec_to_Bcd (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _Dec_to_Bcd                                           2     2      0     136
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     896
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1    1244
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Bcd_to_Dec                                           4     4      0     235
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bcd_to_Dec
     ___bmul
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _Dec_to_Bcd (ARG)
     _I2C_Master_Wait (ARG)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _Set_Date_RTC
     _Dec_to_Bcd
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _Set_Time_RTC
     _Dec_to_Bcd
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      42       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      34       5       65.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      42      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 09 01:19:54 2023

                               pc 0002                    ___bmul@product 0072                                l85 0FFF  
                      _Bcd_to_Dec 0F8A                                fsr 0004                               l104 0FA1  
                             l112 0F5E                               l201 0FBB                               l210 0FDB  
                             l115 02A6                               l204 0009                               l213 01B8  
                             l150 0F3E                               l222 0129                               l118 032F  
                             l216 0F89                               l153 0F4A                               l170 0037  
                             l162 0F33                               l147 006F                               l156 0F2A  
                             l165 0F3D                               l190 00D1                               l182 00B3  
                             l159 0F21                               l191 00D2                               l183 00B6  
                             l168 002F                               l192 00D8                               l184 00BC  
                             l169 0032                               l193 00D9                               l185 00BD  
                             l194 00DF                               l186 00C3                               l338 0409  
                             l195 00E0                               l187 00C4                               l196 00E6  
                             l188 00CA                               l189 00CB                               l198 00E7  
                             l614 016D                               l368 0F73                               l624 00A9  
                             l378 021E                               _DAY 0024                               _GIE 005F  
                             _HOR 0026                               _MIN 0028                               u600 00C1  
                             u601 00C0                               u610 00C8                               u611 00C7  
                             u620 00CF                               u700 01F8                               u621 00CE  
                             u701 01F7                               _SEG 002A                               u630 00D6  
                             u631 00D5                               u560 0F44                               u640 00DD  
                             u720 0216                               _MON 0022                               u561 0F43  
                             u641 00DC                               u721 0215                               u705 01F4  
                             u570 0F4A                               u650 00E4                               u730 004F  
                             u810 0155                               u571 0F49                               u651 00E3  
                             u715 0208                               u811 0154                               u580 00AF  
                             u900 0FC2                               u740 0F53                               u660 01C9  
                             u581 00AE                               u901 0FC1                               u741 0F52  
                             u661 01C8                               u805 0145                               u750 0F65  
                             u590 00BA                               u910 0FD2                               u830 0169  
                             u751 0F64                               u591 00B9                               u911 0FD1  
                             u735 004A                               u831 0168                               u815 0151  
                             u760 0F72                               u920 00F5                               u680 01DD  
                             u840 0076                               u761 0F71                               u681 01DC  
                             u825 015D                               u841 0075                               u930 0117  
                             u770 0132                               u675 01CE                               u771 0131  
                             u940 0129                               u860 0088                               u941 0128  
                             u861 0087                               u950 002B                               u790 0144  
                             u870 0092                               u951 002A                               u695 01DF  
                             u791 0143                               u871 0091                               u855 007A  
                             u785 0136                               u890 00A5                               u970 033C  
                             u891 00A4                               u875 008E                               u971 033B  
                             u980 0374                               u965 0F93                               u885 0099  
                             u981 0373                               u990 039A                               u991 0399  
                             u995 0396                               fsr0 0004                               indf 0000  
                      _Dec_to_Bcd 0F4B                              l1400 00AB                              l1410 00CF  
                            l1402 00AF                              l1500 0F61                              l1412 00D6  
                            l1404 00BA                              l1420 01C9                              l1502 0F65  
                            l1414 00DD                              l1406 00C1                              l1430 01F8  
                            l1422 01CC                              l1504 0F69                              l1416 00E4  
                            l1408 00C8                              l1600 0003                              l1432 0206  
                            l1424 01D9                              l1520 013C                              l1512 012A  
                            l1506 0F6B                              l1610 0FD2                              l1602 0FBD  
                            l1434 0207                              l1426 01DD                              l1418 01B9  
                            l1450 006D                              l1442 0038                              l1530 015C  
                            l1522 0140                              l1514 012C                              l1508 0F72  
                            l1612 0FD5                              l1604 0FC2                              l1620 010D  
                            l1460 0F39                              l1436 0210                              l1428 01E6  
                            l1452 006E                              l1444 003C                              l1532 0163  
                            l1524 0144                              l1516 0132                              l1540 0076  
                            l1700 03F5                              l1630 0025                              l1622 000A  
                            l1606 0FC5                              l1470 0F7E                              l1614 00E8  
                            l1454 0F22                              l1462 0F2B                              l1438 0216  
                            l1446 003F                              l1526 0155                              l1518 0135  
                            l1534 0169                              l1550 0092                              l1542 0079  
                            l1702 0405                              l1710 040A                              l1632 002B  
                            l1624 000F                              l1640 0F1E                              l1608 0FCC  
                            l1472 0F81                              l1616 00EB                              l1480 0F53  
                            l1456 0F27                              l1464 0F30                              l1448 006C  
                            l1560 0FDC                              l1528 015B                              l1552 0098  
                            l1544 0080                              l1800 05E3                              l1720 0459  
                            l1712 0434                              l1642 0F8B                              l1634 0033  
                            l1626 0017                              l1490 0FA6                              l1474 0F86  
                            l1466 0F75                              l1618 0107                              l1482 0F5A  
                            l1458 0F34                              l1570 0FF6                              l1562 0FE0  
                            l1554 009F                              l1546 0084                              l1538 0070  
                            l1650 0336                              l1810 060E                              l1802 05E8  
                            l1730 0483                              l1722 045E                              l1714 043D  
                            l1644 0FA0                              l1396 0F3E                              l1628 0020  
                            l1492 0FAC                              l1468 0F78                              l1484 0F5D  
                            l1476 0F4C                              l1580 0FFD                              l1572 0FF7  
                            l1564 0FEF                              l1548 0088                              l1556 00A5  
                            l1660 0347                              l1652 033C                              l1900 07D1  
                            l1820 0646                              l1812 0613                              l1804 05F7  
                            l1740 04BB                              l1732 0488                              l1724 046D  
                            l1716 0442                              l1398 0F44                              l1638 0F19  
                            l1494 0FAF                              l1590 016E                              l1478 0F4D  
                            l1582 0FFE                              l1574 0FF8                              l1566 0FF2  
                            l1670 0378                              l1662 0364                              l1654 0341  
                            l1902 07E0                              l1830 067A                              l1822 064E  
                            l1814 061C                              l1806 05FC                              l1750 04E0  
                            l1742 04C0                              l1734 0491                              l1726 0472  
                            l1718 044B                              l1496 0FB8                              l1488 0FA3  
                            l1592 0174                              l1576 0FF9                              l1568 0FF3  
                            l1672 037D                              l1664 036C                              l1656 0346  
                            l1648 0333                              l1904 07E6                              l1840 06AD  
                            l1832 0682                              l1824 065C                              l1816 0632  
                            l1808 0605                              l1760 0518                              l1752 04F6  
                            l1744 04C9                              l1736 04A7                              l1728 047B  
                            l1498 0F60                              l1594 017D                              l1586 0220  
                            l1578 0FFC                              l1690 03B4                              l1682 039B  
                            l1666 0370                              l1930 0359                              l1850 06D2  
                            l1842 06B3                              l1834 0688                              l1826 066B  
                            l1818 0637                              l1770 054A                              l1762 0521  
                            l1754 04FB                              l1746 04D2                              l1738 04AC  
                            l1596 018C                              l1588 02A8                              l1692 03B7  
                            l1684 03A5                              l1668 0374                              l1860 070E  
                            l1852 06E0                              l1844 06BC                              l1836 0690  
                            l1828 0671                              l1780 0575                              l1772 0559  
                            l1764 0526                              l1756 050A                              l1748 04D7  
                            l1598 0192                              l1694 03E3                              l1686 03AB  
                            l1678 037F                              l1870 073F                              l1862 0717  
                            l1854 06E9                              l1846 06C4                              l1838 069E  
                            l1790 05AD                              l1782 057E                              l1774 055E  
                            l1766 052F                              l1758 050F                              l1696 03E8  
                            l1688 03B0                              l1880 0773                              l1872 074D  
                            l1864 0726                              l1856 06F1                              l1848 06CA  
                            l1792 05B6                              l1784 0594                              l1776 0567  
                            l1768 0545                              l1698 03EC                              l1890 07A4  
                            l1882 0779                              l1874 075C                              l1866 072E  
                            l1858 06FF                              l1794 05BF                              l1786 0599  
                            l1778 0570                              l1892 07AD                              l1884 0781  
                            l1876 0762                              l1868 0737                              l1796 05C4  
                            l1788 05A8                              l1894 07B5                              l1886 078F  
                            l1878 076B                              l1798 05CD                              l1896 07BB  
                            l1888 079E                              l1898 07C3                              STR_1 081A  
                            STR_2 081F                              STR_3 081F                              STR_4 081F  
                            STR_5 081F                              STR_6 081F                              STR_7 081F  
                            STR_8 081F                              u1000 03A5                              u1001 03A4  
                            u1010 03AB                              u1011 03AA                              u1020 03F5  
                            u1100 07E0                              u1021 03F4                              u1101 07DF  
                            u1030 0405                              u1031 0404                              u1040 066B  
                            u1105 07DC                              u1041 066A                              u1050 06AD  
                            u1051 06AC                              u1060 070E                              u1061 070D  
                            u1045 0667                              u1117 0466                              u1070 0726  
                            u1207 0187                              u1071 0725                              u1055 06A9  
                            u1127 04B4                              u1080 075C                              u1217 0196  
                            u1081 075B                              u1065 070A                              u1137 0503  
                            u1090 079E                              u1227 0FB3                              u1091 079D  
                            u1075 0722                              u1147 0552                              u1085 0758  
                            u1157 05A1                              u1095 079A                              u1167 05F0  
                            u1177 063F                              u1187 0F83                              u1197 0178  
                            _PEIE 005E                              _POT1 002C                              _YEAR 0020  
                            _cDAY 0038                              _cHOR 003B                              _cMIN 003E  
                            _cSEG 0041                              _cMON 0035                 ?_Lcd_Write_String 0073  
__end_of_I2C_Master_RepeatedStart 0F22                              _main 040A                              btemp 007E  
                            start 0000                ??_Lcd_Write_String 0075                   __end_of_Lcd_Cmd 0FBC  
               ___bmul@multiplier 0073                  ?_I2C_Master_Init 0044                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                           _ANSEL 0188                   __end_of___lldiv 021F                   __end_of___lwdiv 016E  
                 __end_of___lwmod 00AA                             _PORTA 0005                             _PORTB 0006  
                           _PORTD 0008                             _PORTE 0009                             _TRISA 0085  
                           _TRISB 0086                             _TRISD 0088                             _SSPIE 0463  
                           _TRISE 0089                             _SSPIF 0063                             _cPOT1 002E  
                           _cYEAR 0032                   __end_of_dpowers 081A                             _setup 0FDC  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __end_of_sprintf 040A                  __end_of_Lcd_Init 01B9                  __end_of_Lcd_Port 00E8  
                 __initialization 07F3                      __end_of_main 07F3                       ?_Bcd_to_Dec 0070  
                          ??_main 0051                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0072  
                     ?_Dec_to_Bcd 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0074  
                          ?_setup 0070                            _ANSELH 0189                   Set_Date_RTC@day 0078  
                 Set_Date_RTC@mon 0074                            _OSCCON 008F                         ??_Lcd_Cmd 0071  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 0F19  
                          ___bmul 0F5F                         ??___lldiv 0078                         ??___lwdiv 0074  
                       ??___lwmod 007C                     ?_Set_Date_RTC 0074              Dec_to_Bcd@bcd_number 0071  
                       ??_sprintf 0047                   Lcd_Set_Cursor@a 0075                   Lcd_Set_Cursor@b 0074  
            Dec_to_Bcd@dec_number 0070           __end_of__initialization 07FC                 __end_of_Lcd_Clear 000A  
             ___bmul@multiplicand 0070                     ?_Set_Time_RTC 0074                    __pcstackCOMMON 0070  
                   __end_of_setup 1000                    ??_Set_Date_RTC 0076                    _Lcd_Set_Cursor 0FBC  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                           ??_setup 007E  
                      __pbssBANK0 0020                    ??_Set_Time_RTC 0076                        __pmaintext 040A  
                         ?___bmul 0070            __end_of_Lcd_Set_Cursor 0FDC                  Set_Date_RTC@year 0075  
                      ??_Lcd_Init 0074                        ??_Lcd_Port 0070                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0800                    _Lcd_Write_Char 0F74  
                         _Lcd_Cmd 0FA2                           ___lldiv 01B9                           ___lwdiv 012A  
                         ___lwmod 0070                      ??_Bcd_to_Dec 0074                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 0330                           __ptext2 0070                           __ptext3 012A  
                         __ptext4 0FDC                           __ptext5 0038                           __ptext6 01B9  
                         __ptext7 021F                           __ptext8 02A7                           __ptext9 0F34  
                         _dpowers 0810                      ??_Dec_to_Bcd 0070                           _sprintf 0330  
                         clrloop0 0F12            __end_of_Lcd_Write_Char 0F8A              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                __end_of_Bcd_to_Dec 0FA2              __end_of_Set_Date_RTC 0330  
                   Bcd_to_Dec@bcd 0077                     Bcd_to_Dec@dec 0076                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0044                  I2C_Master_Read@a 0070  
                       Lcd_Port@a 0070                __end_of_Dec_to_Bcd 0F5F                         _PORTBbits 0006  
                       _PORTDbits 0008              __end_of_Set_Time_RTC 02A7                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0073                 Lcd_Write_String@i 0078  
                       _Lcd_Clear 0003                    __end_of___bmul 0F74                  _Lcd_Write_String 00E8  
             start_initialization 07F3                 ??_I2C_Master_Init 0048                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                  Set_Time_RTC@hour 0078  
                      ?_Lcd_Clear 0070                          ??___bmul 0071                   Lcd_Write_Char@a 0072  
                       ___latbits 0002                     __pcstackBANK0 0044                          ?_Lcd_Cmd 0070  
                     sprintf@flag 004B                       sprintf@prec 004C                  _I2C_Master_Start 0F22  
                _I2C_Master_Write 0F34                  ___lwdiv@dividend 0072                  ??_Lcd_Set_Cursor 0075  
                        ?___lldiv 0070                          ?___lwdiv 0070                          ?___lwmod 0078  
                       __pstrings 0800                      _Set_Date_RTC 02A7                  ___lwdiv@quotient 0075  
                        ?_sprintf 0044                         clear_ram0 0F11                          Lcd_Cmd@a 0073  
                    _Set_Time_RTC 021F                       ??_Lcd_Clear 0074                       __stringbase 080F  
                ??_Lcd_Write_Char 0071                          _Lcd_Init 016E                          _Lcd_Port 00AA  
             I2C_Master_Read@temp 0074          __end_of_Lcd_Write_String 012A                   Set_Time_RTC@min 0074  
                 Set_Time_RTC@sec 0075         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0810  
                      sprintf@val 004D                   _I2C_Master_Init 0038                   _I2C_Master_Read 000A  
                 _I2C_Master_Wait 0F3E                   _I2C_Master_Stop 0F2B                   ___lwdiv@divisor 0070  
                 ___lwdiv@counter 0077                          __ptext10 0F2B                          __ptext11 0F22  
                        __ptext20 0F19                          __ptext12 0F4B                          __ptext21 000A  
                        __ptext13 00E8                          __ptext22 0F3E                          __ptext14 0F74  
                        __ptext23 0F8A                          __ptext15 0FBC                          __ptext24 0F5F  
                        __ptext16 016E                          __ptext17 0003                          __ptext18 0FA2  
                        __ptext19 00AA          __end_of_I2C_Master_Start 0F2B          __end_of_I2C_Master_Write 0F3E  
                       sprintf@ap 004A                         sprintf@sp 004F                  ___lwmod@dividend 007A  
                ___lldiv@dividend 0074                         stringcode 080A           __end_of_I2C_Master_Init 0070  
         __end_of_I2C_Master_Read 0038           __end_of_I2C_Master_Wait 0F4B           __end_of_I2C_Master_Stop 0F34  
              Lcd_Set_Cursor@temp 0076                          sprintf@c 0050                          sprintf@f 0044  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0072                   ___lwmod@divisor 0078  
                 ___lwmod@counter 007D                          stringdir 080A                          stringtab 0800  
                     _SSPCON2bits 0091  
